"use strict";(self.webpackChunkhousing_dashboard=self.webpackChunkhousing_dashboard||[]).push([[1811],{19061:(t,e,i)=>{i.d(e,{H:()=>yt,b:()=>gt,c:()=>mt});var r,n,o,s,a,l,c,h,p,u,d,f,v,g,_,m,w,y,x,T,M,A,C,O,S,P,b,D,E,R,I,F,z,j,H,V,L=i(57528),N=i(19555),B=i(72745),Z=i(55855),U=i(14556),W=i(34981),q=i(26917),G=i(90080),Y=i(98720),k=i(40318),X=i(38280),Q=i(62374),$=i(20469),J=i(66763),K=i(80883),tt=i(81449),et=i(69817),it=i(3799),rt=i(95756),nt=i(51596),ot=i(20123),st=i(58350),at=i(23148),lt=i(21390),ct=i(86955),ht=i(4653),pt=i(70367),ut=i(72001),dt=i(66470),ft=i(2687),vt=i(75569);function gt(t){const e=new ft.N5,i=t.signedDistanceFieldEnabled;e.include(k.Q,t),e.vertex.include(q.rA,t);const{occlusionPass:B,output:gt,oitPass:yt}=t;if(B)return e.include(X.I,t),e;const{vertex:xt,fragment:Tt}=e;e.include(et.Y6),e.include(J.A,t),e.include(G.g,t),e.include(Q.y),Tt.include(tt.W),Tt.include(K.a),e.varyings.add("vcolor","vec4"),e.varyings.add("vtc","vec2"),e.varyings.add("vsize","vec2");const Mt=gt===W.V.Highlight,At=Mt&&t.occlusionTestEnabled;At&&e.varyings.add("voccluded","float"),xt.uniforms.add(new nt.I("viewport",(t=>t.camera.fullViewport)),new rt.G("screenOffset",((t,e)=>(0,N.hZ)(wt,2*t.screenOffset[0]*e.camera.pixelRatio,2*t.screenOffset[1]*e.camera.pixelRatio))),new rt.G("anchorPosition",(t=>mt(t))),new st.E("materialColor",(t=>t.color)),new lt.m("materialRotation",(t=>t.rotation))),(0,it.Nz)(xt),i&&(xt.uniforms.add(new st.E("outlineColor",(t=>t.outlineColor))),Tt.uniforms.add(new st.E("outlineColor",(t=>_t(t)?t.outlineColor:Z.uY)),new lt.m("outlineSize",(t=>_t(t)?t.outlineSize:0)))),t.horizonCullingEnabled&&xt.uniforms.add(new ot.V("pointDistanceSphere",((t,e)=>{const i=e.camera.eye,r=t.origin;return(0,Z.fA)(r[0]-i[0],r[1]-i[1],r[2]-i[2],U.$O.radius)}))),t.pixelSnappingEnabled&&xt.include(Y.K),t.hasScreenSizePerspective&&((0,et.pM)(xt),(0,et.OH)(xt)),t.debugDrawLabelBorder&&e.varyings.add("debugBorderCoords","vec4"),e.attributes.add(dt.r.UV0,"vec2"),e.attributes.add(dt.r.COLOR,"vec4"),e.attributes.add(dt.r.SIZE,"vec2"),e.attributes.add(dt.r.ROTATION,"float"),e.attributes.add(dt.r.FEATUREATTRIBUTE,"vec4"),xt.code.add(t.horizonCullingEnabled?(0,ct.H)(r||(r=(0,L.A)(["bool behindHorizon(vec3 posModel) {\nvec3 camToEarthCenter = pointDistanceSphere.xyz - localOrigin;\nvec3 camToPos = pointDistanceSphere.xyz + posModel;\nfloat earthRadius = pointDistanceSphere.w;\nfloat a = dot(camToPos, camToPos);\nfloat b = dot(camToPos, camToEarthCenter);\nfloat c = dot(camToEarthCenter, camToEarthCenter) - earthRadius * earthRadius;\nreturn  b > 0.0 && b < a && b * b  > a * c;\n}"]))):(0,ct.H)(n||(n=(0,L.A)(["bool behindHorizon(vec3 posModel) { return false; }"])))),xt.main.add((0,ct.H)(o||(o=(0,L.A)(["\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n\n      if (behindHorizon(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n\n      vec2 inputSize;\n      ","\n      ","\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ","\n      ","\n    "])),(0,ct.If)(t.hasScreenSizePerspective,(0,ct.H)(s||(s=(0,L.A)(["\n          inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n          vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);"]))),(0,ct.H)(a||(a=(0,L.A)(["\n          inputSize = size;\n          vec2 screenOffsetScaled = screenOffset;"])))),(0,ct.If)(t.vvSize,(0,ct.H)(l||(l=(0,L.A)(["inputSize *= vvScale(featureAttribute).xx;"])))),(0,ct.If)(t.occlusionTestEnabled,(0,ct.H)(c||(c=(0,L.A)(["\n      bool visible = testHUDVisibility(posProj);\n      if (!visible) {\n        vtc = vec2(0.0);\n        ","\n        return;\n      }"])),(0,ct.If)(t.debugDrawLabelBorder,"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);"))),(0,ct.If)(At,(0,ct.H)(h||(h=(0,L.A)(["voccluded = visible ? 0.0 : 1.0;"]))))));const Ct=(0,ct.H)(p||(p=(0,L.A)(["\n      vec2 uv01 = floor(uv0);\n      vec2 uv = uv0 - uv01;\n      quadOffset.xy = (uv01 - anchorPosition) * 2.0 * combinedSize;\n\n      ","\n\n      quadOffset.xy = (quadOffset.xy + screenOffsetScaled) / viewport.zw * posProj.w;\n  "])),(0,ct.If)(t.hasRotation,(0,ct.H)(u||(u=(0,L.A)(["\n          float angle = radians(materialRotation + rotation);\n          float cosAngle = cos(angle);\n          float sinAngle = sin(angle);\n          mat2 rotate = mat2(cosAngle, -sinAngle, sinAngle,  cosAngle);\n\n          quadOffset.xy = rotate * quadOffset.xy;\n        "]))))),Ot=t.pixelSnappingEnabled?i?(0,ct.H)(d||(d=(0,L.A)(["posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;"]))):(0,ct.H)(f||(f=(0,L.A)(["posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}"]))):(0,ct.H)(v||(v=(0,L.A)(["posProj += quadOffset;"])));xt.main.add((0,ct.H)(g||(g=(0,L.A)(["\n    ","\n    ","\n\n    ","\n\n    bool alphaDiscard = vcolor.a < ",";\n    ",'\n    if (alphaDiscard) {\n      // "early discard" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ',"\n      gl_Position = posProj;\n    }\n\n    vtc = uv;\n\n    ","\n    vsize = inputSize;\n  "])),Ct,t.vvColor?"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;":"vcolor = color / 255.0 * materialColor;",(0,ct.If)(gt===W.V.ObjectAndLayerIdColor,(0,ct.H)(_||(_=(0,L.A)(["vcolor.a = 1.0;"])))),ct.H.float(vt.Q),(0,ct.If)(i,"alphaDiscard = alphaDiscard && outlineColor.a < ".concat(ct.H.float(vt.Q),";")),Ot,(0,ct.If)(t.debugDrawLabelBorder,(0,ct.H)(m||(m=(0,L.A)(["debugBorderCoords = vec4(uv01, 1.5 / combinedSize);"])))))),Tt.uniforms.add(new pt.N("tex",(t=>t.texture))),t.occludedFragmentFade&&(Tt.uniforms.add(new ht.x("depthMap",(t=>t.mainDepth))),Tt.uniforms.add(new at.U("occludedOpacity",(t=>t.hudOccludedFragmentOpacity))));const St=t.debugDrawLabelBorder?(0,ct.H)(w||(w=(0,L.A)(["(isBorder > 0.0 ? 0.0 : ",")"])),ct.H.float(vt.Q)):ct.H.float(vt.Q),Pt=(0,ct.H)(y||(y=(0,L.A)(["\n    ","\n\n    ","\n\n    ","\n\n    ","\n\n    ","\n  "])),(0,ct.If)(t.debugDrawLabelBorder,(0,ct.H)(x||(x=(0,L.A)(["float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));"])))),(0,ct.If)(t.sampleSignedDistanceFieldTexelCenter,(0,ct.H)(T||(T=(0,L.A)(["\n      float txSize = float(textureSize(tex, 0).x);\n      float texelSize = 1.0 / txSize;\n\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;"]))),(0,ct.H)(M||(M=(0,L.A)(["vec2 samplePos = vtc;"])))),i?(0,ct.H)(A||(A=(0,L.A)(["\n      vec4 fillPixelColor = vcolor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgbaTofloat(texture(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < "," ||\n          fillPixelColor.a + outlinePixelColor.a < ","\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        ","\n      } else {\n        if (fillAlphaFactor < ",") {\n          discard;\n        }\n\n        ","\n      }\n\n      // visualize SDF:\n      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      "])),St,ct.H.float(vt.Q),(0,ct.If)(!Mt,(0,ct.H)(C||(C=(0,L.A)(["fragColor = vec4(compositeColor, compositeAlpha);"])))),St,(0,ct.If)(!Mt,(0,ct.H)(O||(O=(0,L.A)(["fragColor = premultiplyAlpha(fillPixelColor);"]))))):(0,ct.H)(S||(S=(0,L.A)(["\n          vec4 texColor = texture(tex, vtc, -0.5);\n          if (texColor.a < ",") {\n            discard;\n          }\n          ","\n          "])),St,(0,ct.If)(!Mt,(0,ct.H)(P||(P=(0,L.A)(["fragColor = texColor * premultiplyAlpha(vcolor);"]))))),(0,ct.If)(t.occludedFragmentFade&&!Mt,(0,ct.H)(b||(b=(0,L.A)(["\n        float zSample = texelFetch(depthMap, ivec2(gl_FragCoord.xy), 0).x;\n        if (zSample < gl_FragCoord.z) {\n          fragColor *= occludedOpacity;\n        }\n        "])))),(0,ct.If)(!Mt&&t.debugDrawLabelBorder,(0,ct.H)(D||(D=(0,L.A)(["fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);"])))));switch(gt){case W.V.Color:case W.V.ColorEmission:e.outputs.add("fragColor","vec4",0),gt===W.V.ColorEmission&&e.outputs.add("fragEmission","vec4",1),yt===ut.Y.ColorAlpha&&e.outputs.add("fragAlpha","float",gt===W.V.ColorEmission?2:1),Tt.main.add((0,ct.H)(E||(E=(0,L.A)(["\n        ","\n        ","\n        ","\n        ",""])),Pt,(0,ct.If)(yt===ut.Y.FrontFace,(0,ct.H)(R||(R=(0,L.A)(["fragColor.rgb /= fragColor.a;"])))),(0,ct.If)(gt===W.V.ColorEmission,(0,ct.H)(I||(I=(0,L.A)(["fragEmission = vec4(0.0);"])))),(0,ct.If)(yt===ut.Y.ColorAlpha,(0,ct.H)(F||(F=(0,L.A)(["fragAlpha = fragColor.a;"]))))));break;case W.V.ObjectAndLayerIdColor:Tt.main.add((0,ct.H)(z||(z=(0,L.A)(["\n        ","\n        outputObjectAndLayerIdColor();"])),Pt));break;case W.V.Highlight:e.include($.Q,t),Tt.main.add((0,ct.H)(j||(j=(0,L.A)(["\n        ","\n        outputHighlight(",");"])),Pt,(0,ct.If)(At,(0,ct.H)(H||(H=(0,L.A)(["voccluded == 1.0"]))),(0,ct.H)(V||(V=(0,L.A)(["false"]))))))}return e}function _t(t){return t.outlineColor[3]>0&&t.outlineSize>0}function mt(t){return t.textureIsSignedDistanceField?(e=t.anchorPosition,i=t.distanceFieldBoundingBox,r=wt,(0,N.hZ)(r,e[0]*(i[2]-i[0])+i[0],e[1]*(i[3]-i[1])+i[1])):(0,N.C)(wt,t.anchorPosition),wt;var e,i,r}const wt=(0,B.vt)(),yt=Object.freeze(Object.defineProperty({__proto__:null,build:gt,calculateAnchorPosition:mt},Symbol.toStringTag,{value:"Module"}))},38280:(t,e,i)=>{i.d(e,{I:()=>c});var r,n,o=i(57528),s=i(98720),a=i(94192),l=i(86955);function c(t,e){const{vertex:i,fragment:c}=t;t.include(a.Z,e),i.include(s.K),i.main.add((0,l.H)(r||(r=(0,o.A)(["vec4 posProjCenter;\nif (dot(position, position) > 0.0) {\nProjectHUDAux projectAux;\nvec4 posProj = projectPositionHUD(projectAux);\nposProjCenter = alignToPixelCenter(posProj, viewport.zw);\nforwardViewPosDepth(projectAux.posView);\nvec3 vpos = projectAux.posModel;\nif (rejectBySlice(vpos)) {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\n} else {\nposProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n}\ngl_Position = posProjCenter;\ngl_PointSize = 1.0;"])))),c.main.add((0,l.H)(n||(n=(0,o.A)(["fragColor = vec4(1);\nif(discardByTerrainDepth()) {\nfragColor.g = 0.5;\n}"]))))}},57481:(t,e,i)=>{i.d(e,{U:()=>o});var r=i(93345),n=i(21812);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const i=t.stride;return Array.from(t.fields.keys()).map((r=>{var o,a;const l=t.fields.get(r),c=l.constructor.ElementCount,h=s(l.constructor.ElementType),p=l.offset,u=null!==(o=null===(a=l.optional)||void 0===a?void 0:a.glNormalized)&&void 0!==o&&o;return new n._(r,c,h,p,i,u,e)}))}function s(t){const e=a[t];if(e)return e;throw new Error("BufferType not supported in WebGL")}const a={u8:r.pe.UNSIGNED_BYTE,u16:r.pe.UNSIGNED_SHORT,u32:r.pe.UNSIGNED_INT,i8:r.pe.BYTE,i16:r.pe.SHORT,i32:r.pe.INT,f32:r.pe.FLOAT}},57583:(t,e,i)=>{i.d(e,{A:()=>O});var r=i(35143),n=i(91967),o=i(76460),s=i(15941),a=i(76931),l=i(46053),c=(i(81806),i(47249),i(85842)),h=i(34761),p=i(13191),u=i(19555),d=i(72745),f=i(20664),v=i(9392),g=i(43047),_=i(55855),m=i(4763),w=i(95925),y=i(96190),x=i(64465);var T,M,A;i(30015);!function(t){t[t.Default=0]="Default",t[t.Screenshot=1]="Screenshot",t[t.ObjectAndLayerID=2]="ObjectAndLayerID"}(T||(T={})),function(t){t[t.TOP=0]="TOP",t[t.RIGHT=1]="RIGHT",t[t.BOTTOM=2]="BOTTOM",t[t.LEFT=3]="LEFT"}(M||(M={}));let C=A=class extends n.A{constructor(t){super(t),this._ray=(0,w.vt)(),this._viewport=(0,_.fA)(0,0,1,1),this._padding=(0,_.fA)(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=(0,d.fA)(1,1e3),this._viewDirty=!0,this._viewMatrix=(0,p.vt)(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=(0,p.vt)(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=(0,p.vt)(),this._frustumDirty=!0,this._frustum=(0,m.vt)(),this._fullViewport=(0,_.vt)(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=(0,v.vt)(),this._up=(0,v.vt)(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(t){this._pixelRatio=t>0?t:1}get rows(){return this._rows}set rows(t){this._rows=Math.max(1,t)}get columns(){return this._columns}set columns(t){this._columns=Math.max(1,t)}get eye(){return this._ray.origin}set eye(t){this._compareAndSetView(t,this._ray.origin)}get center(){return this._center}set center(t){this._compareAndSetView(t,this._center,"_center")}get ray(){return(0,f.d)(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(t){this._compareAndSetView(t,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(t){(0,h.C)(this._viewMatrix,t),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),(0,f.i)((0,v.vt)(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),(0,f.i)((0,v.vt)(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),(0,f.i)((0,v.vt)(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(t){this._nearFar[0]!==t&&(this._nearFar[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(t){this._nearFar[1]!==t&&(this._nearFar[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(t){this.x=t[0],this.y=t[1],this.width=t[2],this.height=t[3]}get screenViewport(){if(1===this.pixelRatio)return this._viewport;const t=(0,g.b)((0,_.vt)(),this._viewport,1/this.pixelRatio),e=this._get("screenViewport");return e&&(0,g.e)(t,e)?e:t}get screenPadding(){if(1===this.pixelRatio)return this._padding;const t=(0,g.b)((0,_.vt)(),this._padding,1/this.pixelRatio),e=this._get("screenPadding");return e&&(0,g.e)(t,e)?e:t}get x(){return this._viewport[0]}set x(t){t+=this._padding[M.LEFT],this._viewport[0]!==t&&(this._viewport[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(t){t+=this._padding[M.BOTTOM],this._viewport[1]!==t&&(this._viewport[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(t){this._viewport[2]!==t&&(this._viewport[2]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(t){this._viewport[3]!==t&&(this._viewport[3]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[M.RIGHT]+this._padding[M.LEFT]}set fullWidth(t){this.width=t-(this._padding[M.RIGHT]+this._padding[M.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[M.TOP]+this._padding[M.BOTTOM]}set fullHeight(t){this.height=t-(this._padding[M.TOP]+this._padding[M.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[M.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[M.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(t){(0,g.a)(this._padding,t)||(this._viewport[0]+=t[M.LEFT]-this._padding[M.LEFT],this._viewport[1]+=t[M.BOTTOM]-this._padding[M.BOTTOM],this._viewport[2]-=t[M.RIGHT]+t[M.LEFT]-(this._padding[M.RIGHT]+this._padding[M.LEFT]),this._viewport[3]-=t[M.TOP]+t[M.BOTTOM]-(this._padding[M.TOP]+this._padding[M.BOTTOM]),(0,g.c)(this._padding,t),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&((0,h.lw)(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return(0,h.B8)((0,p.vt)(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||(0,p.vt)()}get fov(){return this._fov}set fov(t){this._fov=t,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return function(t,e,i){return 2*Math.atan(e*Math.tan(.5*t)/Math.sqrt(e*e+i*i))}(this._fov,this.width,this.height)}set fovX(t){this._fov=function(t,e,i){return 2*Math.atan(Math.sqrt(e*e+i*i)*Math.tan(.5*t)/e)}(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return function(t,e,i){return 2*Math.atan(i*Math.tan(.5*t)/Math.sqrt(e*e+i*i))}(this._fov,this.width,this.height)}set fovY(t){this._fov=function(t,e,i){return 2*Math.atan(Math.sqrt(e*e+i*i)*Math.tan(.5*t)/i)}(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return(0,f.j)(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&((0,h.B8)(this._viewInverseTransposeMatrix,this.viewMatrix),(0,h.mg)(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(t){const{near:e,far:i}=this;return 2*e*i/(i+e-t*(i-e))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return null!=this.relativeElevation&&this.relativeElevation>=0}get _projectionMatrixInternal(){const t=this.width,e=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,n=i/this.rows,o=r/this.columns,s=-r/2+this.column*o,a=s+o,l=-i/2+this.row*n,c=l+n,u=(0,h.$h)((0,p.vt)(),s*(1+2*this._padding[M.LEFT]/t),a*(1+2*this._padding[M.RIGHT]/t),l*(1+2*this._padding[M.BOTTOM]/e),c*(1+2*this._padding[M.TOP]/e),this.near,this.far),d=this._get("projectionMatrix");return d&&(0,h.aI)(d,u)?d:u}copyFrom(t){(0,f.c)(this._ray.origin,t.eye),this.center=t.center,this.up=t.up,(0,g.c)(this._viewport,t.viewport),this.notifyChange("_viewport"),(0,g.c)(this._padding,t.padding),this.notifyChange("_padding"),(0,u.C)(this._nearFar,t.nearFar),this.notifyChange("_nearFar"),this._fov=t.fov,this.row=t.row,this.column=t.column,this.rows=t.rows,this.columns=t.columns,this.relativeElevation=t.relativeElevation;const e=t;return this._viewDirty=e._viewDirty,this._viewDirty||((0,h.C)(this._viewMatrix,t.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=e._frustumDirty,this._frustumDirty||((0,m.C)(this._frustum,t.frustum),this._frustumDirty=!1),e._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:((0,h.C)(this._viewInverseTransposeMatrix,t.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),(0,g.c)(this._fullViewport,t.fullViewport),this.pixelRatio=t.pixelRatio,this}copyViewFrom(t){this.eye=t.eye,this.center=t.center,this.up=t.up,this.fov=t.fov}clone(){return(new A).copyFrom(this)}equals(t){return(0,f.p)(this.eye,t.eye)&&(0,f.p)(this.center,t.center)&&(0,f.p)(this.up,t.up)&&(0,g.a)(this._viewport,t.viewport)&&(0,g.a)(this._padding,t.padding)&&(0,u.t2)(this.nearFar,t.nearFar)&&this._fov===t.fov&&this.pixelRatio===t.pixelRatio&&this.relativeElevation===t.relativeElevation&&this.row===t.row&&this.column===t.column&&this.rows===t.rows&&this.columns===t.columns}almostEquals(t){const e=Math.max(1,1/this.pixelRatio,1/t.pixelRatio);if(Math.abs(t.fov-this._fov)>=.001||(0,g.d)(t.screenPadding,this.screenPadding)>=e||(0,g.d)(this.screenViewport,t.screenViewport)>=e||this.row!==t.row||this.column!==t.column||this.rows!==t.rows||this.columns!==t.columns)return!1;(0,f.a)(b,t.eye,t.center),(0,f.a)(D,this.eye,this.center);const i=(0,f.f)(b,D),r=(0,f.z)(b),n=(0,f.z)(D),o=5e-4;return i*i>=(1-1e-10)*r*n&&(0,f.y)(t.eye,this.eye)<Math.max(r,n)*o*o}computeRenderPixelSizeAt(t){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(t))}computeRenderPixelSizeAtDist(t){return t*this.perRenderPixelRatio}computeScreenPixelSizeAt(t){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(t))}_viewDirectionDistance(t){return Math.abs((0,y.gr)(this.viewForward,(0,f.d)(b,t,this.eye)))}computeScreenPixelSizeAtDist(t){return t*this.perScreenPixelRatio}computeDistanceFromRadius(t,e){return t/Math.tan(Math.min(this.fovX,this.fovY)/(2*(e||1)))}getScreenCenter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,a.gs)();return t[0]=(this.padding[M.LEFT]+this.width/2)/this.pixelRatio,t[1]=(this.padding[M.TOP]+this.height/2)/this.pixelRatio,t}getRenderCenter(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return t[0]=this.padding[M.LEFT]+this.width*e,t[1]=this.padding[M.BOTTOM]+this.height*i,t[2]=.5,t}setGLViewport(t){const e=this.viewport,i=this.padding;t.setViewport(e[0]-i[3],e[1]-i[2],e[2]+i[1]+i[3],e[3]+i[0]+i[2])}applyProjection(t,e){t!==S&&(0,f.c)(S,t),S[3]=1,(0,g.t)(S,S,this.projectionMatrix);const i=Math.abs(S[3]);(0,f.h)(S,S,1/i);const r=this.fullViewport;e[0]=(0,s.Cc)(0,r[0]+r[2],.5+.5*S[0]),e[1]=(0,s.Cc)(0,r[1]+r[3],.5+.5*S[1]),e[2]=.5*(S[2]+1),e[3]=i}unapplyProjection(t,e){const i=this.fullViewport;S[0]=(t[0]/(i[0]+i[2])*2-1)*t[3],S[1]=(t[1]/(i[1]+i[3])*2-1)*t[3],S[2]=(2*t[2]-1)*t[3],S[3]=t[3],null!=this.inverseProjectionMatrix&&((0,g.t)(S,S,this.inverseProjectionMatrix),e[0]=S[0],e[1]=S[1],e[2]=S[2])}projectToScreen(t,e){return this.projectToRenderScreen(t,E),this.renderToScreen(E,e),e}projectToRenderScreen(t,e){if(S[0]=t[0],S[1]=t[1],S[2]=t[2],S[3]=1,(0,g.t)(S,S,this.viewProjectionMatrix),0===S[3])return null;const i=S;(0,f.h)(i,i,1/Math.abs(S[3]));const r=this.fullViewport,n=(0,s.Cc)(0,r[0]+r[2],.5+.5*i[0]),o=(0,s.Cc)(0,r[1]+r[3],.5+.5*i[1]);return"x"in e?(e.x=n,e.y=o):(e[0]=n,e[1]=o,e.length>2&&(e[2]=.5*(i[2]+1))),e}unprojectFromScreen(t,e){return this.unprojectFromRenderScreen(this.screenToRender(t,E),e)}unprojectFromRenderScreen(t,e){if((0,h.lw)(P,this.projectionMatrix,this.viewMatrix),!(0,h.B8)(P,P))return null;const i=this.fullViewport;return S[0]=2*(t[0]-i[0])/i[2]-1,S[1]=2*(t[1]-i[1])/i[3]-1,S[2]=2*t[2]-1,S[3]=1,(0,g.t)(S,S,P),0===S[3]?null:(e[0]=S[0]/S[3],e[1]=S[1]/S[3],e[2]=S[2]/S[3],e)}constrainWindowSize(t,e,i,r){const n=t*this.pixelRatio,o=e*this.pixelRatio,s=Math.max(n-i/2,0),a=Math.max(this.fullHeight-o-r/2,0),l=-Math.min(n-i/2,0),c=-Math.min(this.fullHeight-o-r/2,0),h=i-l- -Math.min(this.fullWidth-n-i/2,0),p=r-c- -Math.min(o-r/2,0);return[Math.round(s),Math.round(a),Math.round(h),Math.round(p)]}computeUp(t){t===x.RT.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(t,e){const i=t[0]*this.pixelRatio,r=this.fullHeight-t[1]*this.pixelRatio;return e[0]=i,e[1]=r,e}renderToScreen(t,e){const i=t[0]/this.pixelRatio,r=(this.fullHeight-t[1])/this.pixelRatio;e[0]=i,e[1]=r}_computeUpGlobal(){(0,f.d)(b,this.center,this.eye);const t=(0,f.l)(this.center);t<1?((0,f.i)(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs((0,f.f)(b,this.center))>.9999*(0,f.l)(b)*t||((0,f.e)(this._up,b,this.center),(0,f.e)(this._up,this._up,b),(0,f.n)(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){(0,f.o)(b,this.eye,this.center),Math.abs(b[2])<=.9999&&((0,f.h)(b,b,b[2]),(0,f.i)(this._up,-b[0],-b[1],1-b[2]),(0,f.n)(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";"number"==typeof t[0]&&isFinite(t[0])&&"number"==typeof t[1]&&isFinite(t[1])&&"number"==typeof t[2]&&isFinite(t[2])?(0,f.p)(t,e)||((0,f.c)(e,t),this._markViewDirty(),i.length&&this.notifyChange(i)):o.A.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&((0,m.ui)(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&((0,h.t5)(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};(0,r._)([(0,l.MZ)()],C.prototype,"_viewport",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_padding",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_fov",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_nearFar",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_viewDirty",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_viewMatrix",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_pixelRatio",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"pixelRatio",null),(0,r._)([(0,l.MZ)()],C.prototype,"row",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"column",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"_rows",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"rows",null),(0,r._)([(0,l.MZ)()],C.prototype,"_columns",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"columns",null),(0,r._)([(0,l.MZ)()],C.prototype,"eye",null),(0,r._)([(0,l.MZ)()],C.prototype,"center",null),(0,r._)([(0,l.MZ)()],C.prototype,"_center",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"up",null),(0,r._)([(0,l.MZ)()],C.prototype,"_up",void 0),(0,r._)([(0,l.MZ)()],C.prototype,"viewMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"viewForward",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"viewUp",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"viewRight",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"nearFar",null),(0,r._)([(0,l.MZ)()],C.prototype,"near",null),(0,r._)([(0,l.MZ)()],C.prototype,"far",null),(0,r._)([(0,l.MZ)()],C.prototype,"viewport",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"screenViewport",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"screenPadding",null),(0,r._)([(0,l.MZ)()],C.prototype,"x",null),(0,r._)([(0,l.MZ)()],C.prototype,"y",null),(0,r._)([(0,l.MZ)()],C.prototype,"width",null),(0,r._)([(0,l.MZ)()],C.prototype,"height",null),(0,r._)([(0,l.MZ)()],C.prototype,"fullWidth",null),(0,r._)([(0,l.MZ)()],C.prototype,"fullHeight",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"_aspect",null),(0,r._)([(0,l.MZ)()],C.prototype,"padding",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"projectionMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"inverseProjectionMatrix",null),(0,r._)([(0,l.MZ)()],C.prototype,"fov",null),(0,r._)([(0,l.MZ)()],C.prototype,"fovX",null),(0,r._)([(0,l.MZ)()],C.prototype,"fovY",null),(0,r._)([(0,l.MZ)()],C.prototype,"viewInverseTransposeMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],C.prototype,"_projectionMatrixInternal",null),(0,r._)([(0,l.MZ)()],C.prototype,"relativeElevation",void 0),C=A=(0,r._)([(0,c.$)("esri.views.3d.webgl.RenderCamera")],C);const O=C,S=(0,_.vt)(),P=(0,p.vt)(),b=(0,v.vt)(),D=(0,v.vt)(),E=(0,a.r_)()},60216:(t,e,i)=>{i.d(e,{E:()=>o});var r=i(9392),n=(i(9624),i(14487));function o(t,e,i){return!!(0,n.F)(t,e,s,i.spatialReference)&&(i.x=s[0],i.y=s[1],i.z=s[2],!0)}const s=(0,r.vt)()},60586:(t,e,i)=>{i.d(e,{Cc:()=>l,RW:()=>a});var r=i(91967),n=i(34981);const o={required:[]};n.V.Depth;class s extends r.A{precompile(t){return!!this.acquireTechniques(t)}consumes(){return o}get usedMemory(){return 0}get isDecoration(){return!1}get running(){return!1}modify(t){}get numGeometries(){return 0}get hasOccludees(){return!1}get hasEmissions(){return!1}forEachGeometry(t){}queryRenderOccludedState(t){return!1}}class a extends s{}class l extends s{}},69008:(t,e,i)=>{i.d(e,{Z:()=>n});var r=i(36911);class n extends r.Z{}},90155:(t,e,i)=>{i.d(e,{R:()=>k});var r=i(89379),n=i(15941),o=i(63919),s=i(44680),a=i(34761),l=i(13191),c=i(19555),h=i(72745),p=i(20664),u=i(9392),d=i(55855);function f(t){return function(t){return t instanceof Float32Array&&t.length>=16}(t)||function(t){return Array.isArray(t)&&t.length>=16}(t)}var v=i(2413),g=i(88105),_=i(63048),m=i(22955),w=i(48549),y=i(34981),x=i(40318),T=i(61785),M=i(75803),A=i(45463),C=i(77730),O=i(12028),S=i(86994),P=i(66470);class b{constructor(){this.scale=0,this.factor=0,this.minScaleFactor=0}}var D=i(52757),E=i(99362),R=i(19061),I=i(16506),F=i(59246),z=i(72001),j=i(60322),H=i(93345),V=i(57162);class L extends F.w{constructor(t,e){super(t,e,new I.$(R.H,(()=>i.e(271).then(i.bind(i,60271))))),this.primitiveType=e.occlusionPass?H.WR.POINTS:H.WR.TRIANGLES}initializePipeline(t){const{oitPass:e,hasPolygonOffset:i,draped:r,output:n,depthTestEnabled:o,occlusionPass:s}=t,a=e===z.Y.NONE,l=e===z.Y.ColorAlpha,c=n===y.V.Highlight,h=o&&!r&&!l&&!s&&!c;return(0,V.Ey)({blending:(0,y.RN)(n)?a?V.Os:(0,j.ez)(e):null,depthTest:o&&!r?{func:H.MT.LEQUAL}:null,depthWrite:h?V.Uy:null,drawBuffers:(0,j.m6)(e,n),colorWrite:V.kn,polygonOffset:i?N:null})}}const N={factor:0,units:-4};var B=i(35143),Z=i(97808),U=i(42717),W=i(6485),q=i(94570);class G extends q.E{constructor(t){super(),this.spherical=t,this.screenCenterOffsetUnitsEnabled=!1,this.occlusionTestEnabled=!0,this.signedDistanceFieldEnabled=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.vvSize=!1,this.vvColor=!1,this.hasVerticalOffset=!1,this.hasScreenSizePerspective=!1,this.hasRotation=!1,this.debugDrawLabelBorder=!1,this.hasPolygonOffset=!1,this.depthTestEnabled=!0,this.pixelSnappingEnabled=!0,this.draped=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.occlusionPass=!1,this.occludedFragmentFade=!1,this.objectAndLayerIdColorInstanced=!1,this.horizonCullingEnabled=!0,this.isFocused=!0,this.textureCoordinateType=Z.I.None,this.emissionSource=U.ZX.None,this.discardInvisibleFragments=!0,this.hasVvInstancing=!1}}(0,B._)([(0,W.W)()],G.prototype,"screenCenterOffsetUnitsEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"occlusionTestEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"signedDistanceFieldEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"sampleSignedDistanceFieldTexelCenter",void 0),(0,B._)([(0,W.W)()],G.prototype,"vvSize",void 0),(0,B._)([(0,W.W)()],G.prototype,"vvColor",void 0),(0,B._)([(0,W.W)()],G.prototype,"hasVerticalOffset",void 0),(0,B._)([(0,W.W)()],G.prototype,"hasScreenSizePerspective",void 0),(0,B._)([(0,W.W)()],G.prototype,"hasRotation",void 0),(0,B._)([(0,W.W)()],G.prototype,"debugDrawLabelBorder",void 0),(0,B._)([(0,W.W)()],G.prototype,"hasPolygonOffset",void 0),(0,B._)([(0,W.W)()],G.prototype,"depthTestEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"pixelSnappingEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"draped",void 0),(0,B._)([(0,W.W)()],G.prototype,"terrainDepthTest",void 0),(0,B._)([(0,W.W)()],G.prototype,"cullAboveTerrain",void 0),(0,B._)([(0,W.W)()],G.prototype,"occlusionPass",void 0),(0,B._)([(0,W.W)()],G.prototype,"occludedFragmentFade",void 0),(0,B._)([(0,W.W)()],G.prototype,"objectAndLayerIdColorInstanced",void 0),(0,B._)([(0,W.W)()],G.prototype,"horizonCullingEnabled",void 0),(0,B._)([(0,W.W)()],G.prototype,"isFocused",void 0);var Y=i(75569);class k extends A.im{constructor(t,e){super(t,_t),this.produces=new Map([[C.N.HUD_MATERIAL,t=>(0,y.Mb)(t)&&!this.parameters.drawAsLabel],[C.N.LABEL_MATERIAL,t=>(0,y.Mb)(t)&&this.parameters.drawAsLabel],[C.N.OCCLUSION_PIXELS,()=>this.parameters.occlusionTest],[C.N.DRAPED_MATERIAL,t=>this.parameters.draped&&(0,y.Mb)(t)]]),this._visible=!0,this._configuration=new G(e)}getConfiguration(t,e){return this._configuration.output=t,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasPolygonOffset=this.parameters.polygonOffset,this._configuration.draped=this.parameters.draped,this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this._configuration.sampleSignedDistanceFieldTexelCenter=this.parameters.sampleSignedDistanceFieldTexelCenter,this._configuration.hasRotation=this.parameters.hasRotation,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.occlusionPass=e.slot===C.N.OCCLUSION_PIXELS,this._configuration.occludedFragmentFade=this.parameters.occludedFragmentFade,this._configuration.horizonCullingEnabled=this.parameters.horizonCullingEnabled,this._configuration.isFocused=this.parameters.isFocused,this._configuration.depthTestEnabled=this.parameters.depthEnabled||e.slot===C.N.OCCLUSION_PIXELS,(0,y.RN)(t)&&(this._configuration.debugDrawLabelBorder=!!m.b.LABELS_SHOW_BORDER),this._configuration.oitPass=e.oitPass,this._configuration.terrainDepthTest=e.terrainDepthTest,this._configuration.cullAboveTerrain=e.cullAboveTerrain,this._configuration}intersect(t,e,i,r,n,s){const{options:{selectionMode:l,hud:c,excludeLabels:h},point:d,camera:f}=i,{parameters:v}=this;if(!l||!c||h&&v.isLabel||!t.visible||!d)return;const{scaleX:g,scaleY:_}=this._getScreenScale(t,f.pixelRatio);(0,o.z0)(st,e),t.attributes.has(P.r.FEATUREATTRIBUTE)&&function(t){const e=t[0],i=t[1],r=t[2],n=t[3],o=t[4],s=t[5],a=t[6],l=t[7],c=t[8],h=1/Math.sqrt(e*e+i*i+r*r),p=1/Math.sqrt(n*n+o*o+s*s),u=1/Math.sqrt(a*a+l*l+c*c);t[0]=e*h,t[1]=i*h,t[2]=r*h,t[3]=n*p,t[4]=o*p,t[5]=s*p,t[6]=a*u,t[7]=l*u,t[8]=c*u}(st);const m=t.attributes.get(P.r.POSITION),w=t.attributes.get(P.r.SIZE),y=t.attributes.get(P.r.NORMAL),x=t.attributes.get(P.r.ROTATION),T=t.attributes.get(P.r.CENTEROFFSETANDDISTANCE);(0,S.vA)(m.size>=3);const M=(0,R.c)(v),A="screen"===this.parameters.centerOffsetUnits;for(let o=0;o<m.data.length/m.size;o++){const t=o*m.size;(0,p.i)(K,m.data[t],m.data[t+1],m.data[t+2]),(0,p.t)(K,K,e),(0,p.t)(K,K,f.viewMatrix);const r=o*T.size;if((0,p.i)(ct,T.data[r],T.data[r+1],T.data[r+2]),!A&&(K[0]+=ct[0],K[1]+=ct[1],0!==ct[2])){const t=ct[2];(0,p.n)(ct,K),(0,p.d)(K,K,(0,p.h)(ct,ct,t))}const n=o*y.size;if((0,p.i)(tt,y.data[n],y.data[n+1],y.data[n+2]),Q(tt,st,f,ut),this._applyVerticalOffsetTransformationView(K,ut,f,J),f.applyProjection(K,et),et[0]>-1){A&&(ct[0]||ct[1])&&(et[0]+=ct[0]*f.pixelRatio,0!==ct[1]&&(et[1]+=(0,O.m0)(ct[1],J.factorAlignment)*f.pixelRatio),f.unapplyProjection(et,K)),et[0]+=this.parameters.screenOffset[0]*f.pixelRatio,et[1]+=this.parameters.screenOffset[1]*f.pixelRatio,et[0]=Math.floor(et[0]),et[1]=Math.floor(et[1]);const t=o*w.size;vt[0]=w.data[t],vt[1]=w.data[t+1],(0,O.MD)(vt,J.factor,vt);const e=dt*f.pixelRatio;let r=0;v.textureIsSignedDistanceField&&(r=Math.min(v.outlineSize,.5*vt[0])*f.pixelRatio/2),vt[0]*=g,vt[1]*=_;const n=o*x.size,l=v.rotation+x.data[n];if($(d,et[0],et[1],vt,e,r,l,v,M)){const t=i.ray;if((0,p.t)(rt,K,(0,a.B8)(lt,f.viewMatrix)),et[0]=d[0],et[1]=d[1],f.unprojectFromRenderScreen(et,K)){const e=(0,u.vt)();(0,p.c)(e,t.direction);const i=1/(0,p.l)(e);(0,p.h)(e,e,i),s((0,p.j)(t.origin,K)*i,e,-1,!0,1,rt)}}}}}intersectDraped(t,e,i,r,n,o){const s=t.attributes.get(P.r.POSITION),a=t.attributes.get(P.r.SIZE),l=t.attributes.get(P.r.ROTATION),c=this.parameters,h=(0,R.c)(c),{scaleX:p,scaleY:u}=this._getScreenScale(t,t.screenToWorldRatio),d=ft*t.screenToWorldRatio;for(let f=0;f<s.data.length/s.size;f++){const e=f*s.size,i=s.data[e],v=s.data[e+1],g=f*a.size;vt[0]=a.data[g],vt[1]=a.data[g+1];let _=0;c.textureIsSignedDistanceField&&(_=Math.min(c.outlineSize,.5*vt[0])*t.screenToWorldRatio/2),vt[0]*=p,vt[1]*=u;const m=f*l.size,w=c.rotation+l.data[m];$(r,i,v,vt,d,_,w,c,h)&&n(o.dist,o.normal,-1,!1)}}createBufferWriter(){return new yt}_updateScaleInfo(t,e,i){const r=this.parameters;null!=r.screenSizePerspective?(0,O.cJ)(i,e,r.screenSizePerspective,t.factor):(t.factor.scale=1,t.factor.factor=0,t.factor.minScaleFactor=0),null!=r.screenSizePerspectiveAlignment?(0,O.cJ)(i,e,r.screenSizePerspectiveAlignment,t.factorAlignment):(t.factorAlignment.factor=t.factor.factor,t.factorAlignment.scale=t.factor.scale,t.factorAlignment.minScaleFactor=t.factor.minScaleFactor)}applyShaderOffsetsView(t,e,i,r,n,o,s){const a=Q(e,i,n,ut);return this._applyVerticalGroundOffsetView(t,a,n,s),this._applyVerticalOffsetTransformationView(s,a,n,o),this._applyPolygonOffsetView(s,a,r[3],n,s),this._applyCenterOffsetView(s,r,s),s}applyShaderOffsetsNDC(t,e,i,r,n){return this._applyCenterOffsetNDC(t,e,i,r),null!=n&&(0,p.c)(n,r),this._applyPolygonOffsetNDC(r,e,i,r),r}_applyPolygonOffsetView(t,e,i,r,o){const s=r.aboveGround?1:-1;let a=Math.sign(i);0===a&&(a=s);const l=s*a;if(this.parameters.shaderPolygonOffset<=0)return(0,p.c)(o,t);const c=(0,n.qE)(Math.abs(e.cosAngle),.01,1),h=1-Math.sqrt(1-c*c)/c/r.viewport[2];return(0,p.h)(o,t,l>0?h:1/h),o}_applyVerticalGroundOffsetView(t,e,i,r){const n=(0,p.l)(t),o=i.aboveGround?1:-1,s=i.computeRenderPixelSizeAtDist(n)*x.R,a=(0,p.h)(K,e.normal,o*s);return(0,p.g)(r,t,a),r}_applyVerticalOffsetTransformationView(t,e,i,r){var n,o;const s=this.parameters;if(null===(n=s.verticalOffset)||void 0===n||!n.screenLength){if(s.screenSizePerspective||s.screenSizePerspectiveAlignment){const i=(0,p.l)(t);this._updateScaleInfo(r,i,e.cosAngle)}else r.factor.scale=1,r.factorAlignment.scale=1;return t}const a=(0,p.l)(t),l=null!==(o=s.screenSizePerspectiveAlignment)&&void 0!==o?o:s.screenSizePerspective,c=(0,E.kE)(i,a,s.verticalOffset,e.cosAngle,l);return this._updateScaleInfo(r,a,e.cosAngle),(0,p.h)(e.normal,e.normal,c),(0,p.g)(t,t,e.normal)}_applyCenterOffsetView(t,e,i){const r="screen"!==this.parameters.centerOffsetUnits;return i!==t&&(0,p.c)(i,t),r&&(i[0]+=e[0],i[1]+=e[1],e[2]&&((0,p.n)(tt,i),(0,p.g)(i,i,(0,p.h)(tt,tt,e[2])))),i}_applyCenterOffsetNDC(t,e,i,r){const n="screen"!==this.parameters.centerOffsetUnits;return r!==t&&(0,p.c)(r,t),n||(r[0]+=e[0]/i.fullWidth*2,r[1]+=e[1]/i.fullHeight*2),r}_applyPolygonOffsetNDC(t,e,i,r){const n=this.parameters.shaderPolygonOffset;if(t!==r&&(0,p.c)(r,t),n){const t=i.aboveGround?1:-1,o=t*Math.sign(e[3]);r[2]-=(o||t)*n}return r}set visible(t){this._visible=t}get visible(){const{color:t,outlineSize:e,outlineColor:i}=this.parameters,r=t[3]>=Y.Q||e>=Y.Q&&i[3]>=Y.Q;return this._visible&&r}createGLMaterial(t){return new X(t)}calculateRelativeScreenBounds(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,v.vt)();return function(t,e,i,r){r[0]=t.anchorPosition[0]*-e[0]+t.screenOffset[0]*i,r[1]=t.anchorPosition[1]*-e[1]+t.screenOffset[1]*i}(this.parameters,t,e,i),i[2]=i[0]+t[0],i[3]=i[1]+t[1],i}_getScreenScale(t,e){const i=t.attributes.get(P.r.FEATUREATTRIBUTE);if(null==i)return{scaleX:e,scaleY:e};const r=(0,d.ci)(i.data,pt);return(0,_.VC)(ht,this.parameters,r),{scaleX:ht[0]*e,scaleY:ht[1]*e}}}class X extends M.m8{constructor(t){super((0,r.A)((0,r.A)({},t),t.material.parameters))}beginSlot(t){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.getTechnique(L,t)}}function Q(t,e,i,r){return f(e)&&(e=(0,o.z0)(at,e)),(0,p.q)(r.normal,t,e),(0,p.t)(r.normal,r.normal,i.viewInverseTransposeMatrix),r.cosAngle=(0,p.f)(it,gt),r}function $(t,e,i,r,o,s,a,l,h){let p=e-o-r[0]*h[0],u=p+r[0]+2*o,d=i-o-r[1]*h[1],f=d+r[1]+2*o;const v=l.distanceFieldBoundingBox;return l.textureIsSignedDistanceField&&null!=v&&(p+=r[0]*v[0],d+=r[1]*v[1],u-=r[0]*(1-v[2]),f-=r[1]*(1-v[3]),p-=s,u+=s,d-=s,f+=s),(0,c.hZ)(ot,e,i),(0,c.e$)(nt,t,ot,(0,n.kU)(a)),nt[0]>p&&nt[0]<u&&nt[1]>d&&nt[1]<f}const J=new class{constructor(){this.factor=new b,this.factorAlignment=new b}},K=(0,u.vt)(),tt=(0,u.vt)(),et=(0,d.vt)(),it=(0,u.vt)(),rt=(0,u.vt)(),nt=(0,h.vt)(),ot=(0,h.vt)(),st=(0,s.vt)(),at=(0,s.vt)(),lt=(0,l.vt)(),ct=(0,u.vt)(),ht=(0,u.vt)(),pt=(0,d.vt)(),ut={normal:it,cosAngle:0},dt=1,ft=2,vt=[0,0],gt=(0,u.fA)(0,0,1);class _t extends M.NV{constructor(){super(...arguments),this.renderOccluded=A.m$.Occlude,this.isDecoration=!1,this.color=(0,d.CN)(1,1,1,1),this.polygonOffset=!1,this.anchorPosition=(0,h.fA)(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.outlineColor=(0,d.CN)(1,1,1,1),this.outlineSize=0,this.distanceFieldBoundingBox=(0,d.vt)(),this.rotation=0,this.hasRotation=!1,this.vvSizeEnabled=!1,this.vvSize=null,this.vvColor=null,this.vvOpacity=null,this.vvSymbolAnchor=null,this.vvSymbolRotationMatrix=null,this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.occludedFragmentFade=!1,this.horizonCullingEnabled=!1,this.centerOffsetUnits="world",this.drawAsLabel=!1,this.depthEnabled=!0,this.isFocused=!0,this.focusEffect="none",this.draped=!1,this.isLabel=!1}}const mt=(0,w.BP)().vec3f(P.r.POSITION).vec3f(P.r.NORMAL).vec2f(P.r.UV0).vec4u8(P.r.COLOR).vec2f(P.r.SIZE).f32(P.r.ROTATION).vec4f(P.r.CENTEROFFSETANDDISTANCE).vec4f(P.r.FEATUREATTRIBUTE),wt=mt.clone().vec4u8(P.r.OBJECTANDLAYERIDCOLOR);class yt{constructor(){this.vertexBufferLayout=(0,T.E)()?wt:mt}elementCount(t){return 6*t.get(P.r.POSITION).indices.length}write(t,e,i,r,n,o){var s;(0,D.Hk)(i.get(P.r.POSITION),t,n.position,o,6),(0,D.p1)(i.get(P.r.NORMAL),e,n.normal,o,6);const a=null===(s=i.get(P.r.UV0))||void 0===s?void 0:s.data;let l=0,c=0,h=1,p=1;a&&a.length>=4&&(l=a[0],c=a[1],h=a[2],p=a[3]),h=Math.min(1.99999,h+1),p=Math.min(1.99999,p+1);let u=i.get(P.r.POSITION).indices.length,d=o;const f=n.uv0;for(let g=0;g<u;++g)f.set(d,0,l),f.set(d,1,c),d++,f.set(d,0,h),f.set(d,1,c),d++,f.set(d,0,h),f.set(d,1,p),d++,f.set(d,0,h),f.set(d,1,p),d++,f.set(d,0,l),f.set(d,1,p),d++,f.set(d,0,l),f.set(d,1,c),d++;(0,D.tb)(i.get(P.r.COLOR),4,n.color,o,6);const{data:v,indices:_}=i.get(P.r.SIZE);u=_.length;const m=n.size;d=o;for(let g=0;g<u;++g){const t=v[2*_[g]],e=v[2*_[g]+1];for(let i=0;i<6;++i)m.set(d,0,t),m.set(d,1,e),d++}if((0,D.uO)(i.get(P.r.ROTATION),n.rotation,o,6),i.get(P.r.CENTEROFFSETANDDISTANCE)?(0,D.Ut)(i.get(P.r.CENTEROFFSETANDDISTANCE),n.centerOffsetAndDistance,o,6):(0,D.Pq)(n.centerOffsetAndDistance,o,6*u),i.get(P.r.FEATUREATTRIBUTE)?(0,D.Ut)(i.get(P.r.FEATUREATTRIBUTE),n.featureAttribute,o,6):(0,D.Pq)(n.featureAttribute,o,6*u),null!=r){var w;const t=null===(w=i.get(P.r.POSITION))||void 0===w?void 0:w.indices;if(t){const e=t.length,i=n.getField(P.r.OBJECTANDLAYERIDCOLOR,g.XP);(0,D.tH)(r,i,e,o,6)}}}}}}]);
//# sourceMappingURL=1811.7d3bf15e.chunk.js.map