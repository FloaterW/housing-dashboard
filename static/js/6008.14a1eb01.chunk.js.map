{"version":3,"file":"static/js/6008.14a1eb01.chunk.js","mappings":"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","sources":["data/affordability.js","components/charts/MortgageStressTestChart.js","components/charts/AffordabilityGapHeatmap.js","components/charts/HomeownershipTrendsChart.js","components/AffordabilityThresholds.js"],"sourcesContent":["// Affordability thresholds for 2024\n// Format: [decile, minIncome, maxHousePrice]\nexport const affordabilityThresholds2024 = [\n  [1, 35000, 150000],\n  [2, 45000, 200000],\n  [3, 55000, 250000],\n  [4, 65000, 300000],\n  [5, 75000, 350000],\n  [6, 85000, 425000],\n  [7, 95000, 500000],\n  [8, 110000, 600000],\n  [9, 130000, 750000],\n  [10, 160000, 950000],\n];\n\n// Ownership target series\n// Format: [year, actual, target]\nexport const ownershipTargetSeries = [\n  [2018, 68.5, 70.0],\n  [2019, 68.8, 70.5],\n  [2020, 69.2, 71.0],\n  [2021, 69.5, 71.5],\n  [2022, 69.8, 72.0],\n  [2023, 70.1, 72.5],\n  [2024, 70.4, 73.0],\n];\n\n// Rental target series\n// Format: [year, actual, target]\nexport const rentalTargetSeries = [\n  [2018, 31.5, 30.0],\n  [2019, 31.2, 29.5],\n  [2020, 30.8, 29.0],\n  [2021, 30.5, 28.5],\n  [2022, 30.2, 28.0],\n  [2023, 29.9, 27.5],\n  [2024, 29.6, 27.0],\n];\n\n// Density target series\n// Format: [year, actual, target]\nexport const densityTargetSeries = [\n  [2018, 45.2, 50.0],\n  [2019, 47.5, 52.0],\n  [2020, 49.8, 54.0],\n  [2021, 52.1, 56.0],\n  [2022, 54.4, 58.0],\n  [2023, 56.7, 60.0],\n  [2024, 59.0, 62.0],\n];\n\n// Mortgage stress test data - current rates vs stressed rates\nexport const mortgageStressTestData = {\n  'Peel Region': [\n    { \n      type: 'Detached', \n      avgPrice: 1710000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 8950,\n      stressPayment: 11280,\n      qualifyingIncome: 180000,\n      stressQualifyingIncome: 225600,\n      downPayment20: 342000,\n      monthlyTax: 650,\n      monthlyInsurance: 180\n    },\n    { \n      type: 'Semi-Detached', \n      avgPrice: 1080000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 5650,\n      stressPayment: 7120,\n      qualifyingIncome: 113200,\n      stressQualifyingIncome: 142400,\n      downPayment20: 216000,\n      monthlyTax: 410,\n      monthlyInsurance: 120\n    },\n    { \n      type: 'Townhouse', \n      avgPrice: 980000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 5130,\n      stressPayment: 6460,\n      qualifyingIncome: 102600,\n      stressQualifyingIncome: 129200,\n      downPayment20: 196000,\n      monthlyTax: 370,\n      monthlyInsurance: 110\n    },\n    { \n      type: 'Condo', \n      avgPrice: 715000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 3740,\n      stressPayment: 4710,\n      qualifyingIncome: 74800,\n      stressQualifyingIncome: 94200,\n      downPayment20: 143000,\n      monthlyTax: 270,\n      monthlyInsurance: 80\n    }\n  ],\n  'Mississauga': [\n    { \n      type: 'Detached', \n      avgPrice: 1850000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 9680,\n      stressPayment: 12200,\n      qualifyingIncome: 193600,\n      stressQualifyingIncome: 244000,\n      downPayment20: 370000,\n      monthlyTax: 700,\n      monthlyInsurance: 200\n    },\n    { \n      type: 'Semi-Detached', \n      avgPrice: 1180000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 6180,\n      stressPayment: 7790,\n      qualifyingIncome: 123600,\n      stressQualifyingIncome: 155800,\n      downPayment20: 236000,\n      monthlyTax: 450,\n      monthlyInsurance: 130\n    },\n    { \n      type: 'Townhouse', \n      avgPrice: 1050000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 5500,\n      stressPayment: 6930,\n      qualifyingIncome: 110000,\n      stressQualifyingIncome: 138600,\n      downPayment20: 210000,\n      monthlyTax: 400,\n      monthlyInsurance: 120\n    },\n    { \n      type: 'Condo', \n      avgPrice: 780000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 4080,\n      stressPayment: 5140,\n      qualifyingIncome: 81600,\n      stressQualifyingIncome: 102800,\n      downPayment20: 156000,\n      monthlyTax: 300,\n      monthlyInsurance: 90\n    }\n  ],\n  'Brampton': [\n    { \n      type: 'Detached', \n      avgPrice: 1620000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 8480,\n      stressPayment: 10680,\n      qualifyingIncome: 169600,\n      stressQualifyingIncome: 213600,\n      downPayment20: 324000,\n      monthlyTax: 620,\n      monthlyInsurance: 170\n    },\n    { \n      type: 'Semi-Detached', \n      avgPrice: 1020000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 5340,\n      stressPayment: 6730,\n      qualifyingIncome: 106800,\n      stressQualifyingIncome: 134600,\n      downPayment20: 204000,\n      monthlyTax: 390,\n      monthlyInsurance: 110\n    },\n    { \n      type: 'Townhouse', \n      avgPrice: 920000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 4810,\n      stressPayment: 6060,\n      qualifyingIncome: 96200,\n      stressQualifyingIncome: 121200,\n      downPayment20: 184000,\n      monthlyTax: 350,\n      monthlyInsurance: 100\n    },\n    { \n      type: 'Condo', \n      avgPrice: 650000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 3400,\n      stressPayment: 4280,\n      qualifyingIncome: 68000,\n      stressQualifyingIncome: 85600,\n      downPayment20: 130000,\n      monthlyTax: 250,\n      monthlyInsurance: 70\n    }\n  ],\n  'Caledon': [\n    { \n      type: 'Detached', \n      avgPrice: 1950000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 10200,\n      stressPayment: 12850,\n      qualifyingIncome: 204000,\n      stressQualifyingIncome: 257000,\n      downPayment20: 390000,\n      monthlyTax: 740,\n      monthlyInsurance: 210\n    },\n    { \n      type: 'Semi-Detached', \n      avgPrice: 1250000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 6540,\n      stressPayment: 8240,\n      qualifyingIncome: 130800,\n      stressQualifyingIncome: 164800,\n      downPayment20: 250000,\n      monthlyTax: 470,\n      monthlyInsurance: 140\n    },\n    { \n      type: 'Townhouse', \n      avgPrice: 1150000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 6020,\n      stressPayment: 7590,\n      qualifyingIncome: 120400,\n      stressQualifyingIncome: 151800,\n      downPayment20: 230000,\n      monthlyTax: 440,\n      monthlyInsurance: 130\n    },\n    { \n      type: 'Condo', \n      avgPrice: 850000,\n      currentRate: 5.25,\n      stressRate: 7.25,\n      currentPayment: 4450,\n      stressPayment: 5600,\n      qualifyingIncome: 89000,\n      stressQualifyingIncome: 112000,\n      downPayment20: 170000,\n      monthlyTax: 320,\n      monthlyInsurance: 100\n    }\n  ]\n};\n\n// Interest rate sensitivity analysis\nexport const interestRateScenarios = [\n  { rate: 4.0, label: 'Historic Low', qualifyingMultiplier: 0.85 },\n  { rate: 5.25, label: 'Current Rate', qualifyingMultiplier: 1.0 },\n  { rate: 6.0, label: 'Moderate Increase', qualifyingMultiplier: 1.12 },\n  { rate: 7.25, label: 'Stress Test Rate', qualifyingMultiplier: 1.26 },\n  { rate: 8.0, label: 'High Rate', qualifyingMultiplier: 1.35 },\n  { rate: 9.0, label: 'Crisis Scenario', qualifyingMultiplier: 1.48 }\n];\n\n// Affordability gap heatmap data (region vs income decile)\n// Format: percentage of households that can afford average home price\nexport const affordabilityGapData = {\n  'Peel Region': [\n    { decile: 1, affordabilityRate: 2, avgIncome: 35000, avgHousePrice: 1245000 },\n    { decile: 2, affordabilityRate: 5, avgIncome: 45000, avgHousePrice: 1245000 },\n    { decile: 3, affordabilityRate: 8, avgIncome: 55000, avgHousePrice: 1245000 },\n    { decile: 4, affordabilityRate: 12, avgIncome: 65000, avgHousePrice: 1245000 },\n    { decile: 5, affordabilityRate: 18, avgIncome: 75000, avgHousePrice: 1245000 },\n    { decile: 6, affordabilityRate: 25, avgIncome: 85000, avgHousePrice: 1245000 },\n    { decile: 7, affordabilityRate: 35, avgIncome: 95000, avgHousePrice: 1245000 },\n    { decile: 8, affordabilityRate: 48, avgIncome: 110000, avgHousePrice: 1245000 },\n    { decile: 9, affordabilityRate: 65, avgIncome: 130000, avgHousePrice: 1245000 },\n    { decile: 10, affordabilityRate: 85, avgIncome: 160000, avgHousePrice: 1245000 }\n  ],\n  'Mississauga': [\n    { decile: 1, affordabilityRate: 1, avgIncome: 35000, avgHousePrice: 1350000 },\n    { decile: 2, affordabilityRate: 3, avgIncome: 45000, avgHousePrice: 1350000 },\n    { decile: 3, affordabilityRate: 6, avgIncome: 55000, avgHousePrice: 1350000 },\n    { decile: 4, affordabilityRate: 9, avgIncome: 65000, avgHousePrice: 1350000 },\n    { decile: 5, affordabilityRate: 14, avgIncome: 75000, avgHousePrice: 1350000 },\n    { decile: 6, affordabilityRate: 20, avgIncome: 85000, avgHousePrice: 1350000 },\n    { decile: 7, affordabilityRate: 28, avgIncome: 95000, avgHousePrice: 1350000 },\n    { decile: 8, affordabilityRate: 40, avgIncome: 110000, avgHousePrice: 1350000 },\n    { decile: 9, affordabilityRate: 55, avgIncome: 130000, avgHousePrice: 1350000 },\n    { decile: 10, affordabilityRate: 75, avgIncome: 160000, avgHousePrice: 1350000 }\n  ],\n  'Brampton': [\n    { decile: 1, affordabilityRate: 3, avgIncome: 35000, avgHousePrice: 1150000 },\n    { decile: 2, affordabilityRate: 7, avgIncome: 45000, avgHousePrice: 1150000 },\n    { decile: 3, affordabilityRate: 12, avgIncome: 55000, avgHousePrice: 1150000 },\n    { decile: 4, affordabilityRate: 18, avgIncome: 65000, avgHousePrice: 1150000 },\n    { decile: 5, affordabilityRate: 25, avgIncome: 75000, avgHousePrice: 1150000 },\n    { decile: 6, affordabilityRate: 35, avgIncome: 85000, avgHousePrice: 1150000 },\n    { decile: 7, affordabilityRate: 45, avgIncome: 95000, avgHousePrice: 1150000 },\n    { decile: 8, affordabilityRate: 60, avgIncome: 110000, avgHousePrice: 1150000 },\n    { decile: 9, affordabilityRate: 75, avgIncome: 130000, avgHousePrice: 1150000 },\n    { decile: 10, affordabilityRate: 90, avgIncome: 160000, avgHousePrice: 1150000 }\n  ],\n  'Caledon': [\n    { decile: 1, affordabilityRate: 1, avgIncome: 35000, avgHousePrice: 1650000 },\n    { decile: 2, affordabilityRate: 2, avgIncome: 45000, avgHousePrice: 1650000 },\n    { decile: 3, affordabilityRate: 4, avgIncome: 55000, avgHousePrice: 1650000 },\n    { decile: 4, affordabilityRate: 6, avgIncome: 65000, avgHousePrice: 1650000 },\n    { decile: 5, affordabilityRate: 9, avgIncome: 75000, avgHousePrice: 1650000 },\n    { decile: 6, affordabilityRate: 13, avgIncome: 85000, avgHousePrice: 1650000 },\n    { decile: 7, affordabilityRate: 18, avgIncome: 95000, avgHousePrice: 1650000 },\n    { decile: 8, affordabilityRate: 25, avgIncome: 110000, avgHousePrice: 1650000 },\n    { decile: 9, affordabilityRate: 35, avgIncome: 130000, avgHousePrice: 1650000 },\n    { decile: 10, affordabilityRate: 50, avgIncome: 160000, avgHousePrice: 1650000 }\n  ]\n};\n\n// Homeownership rate trends over time\nexport const homeownershipTrends = {\n  'Peel Region': [\n    { year: 2019, rate: 72.3, target: 73.0, firstTimeBuyers: 28.5 },\n    { year: 2020, rate: 71.8, target: 73.5, firstTimeBuyers: 26.2 },\n    { year: 2021, rate: 70.9, target: 74.0, firstTimeBuyers: 23.8 },\n    { year: 2022, rate: 69.5, target: 74.5, firstTimeBuyers: 21.4 },\n    { year: 2023, rate: 68.2, target: 75.0, firstTimeBuyers: 19.6 },\n    { year: 2024, rate: 67.1, target: 75.5, firstTimeBuyers: 18.2 },\n    { year: 2025, rate: 66.5, target: 76.0, firstTimeBuyers: 17.5 }\n  ],\n  'Mississauga': [\n    { year: 2019, rate: 70.8, target: 72.0, firstTimeBuyers: 26.3 },\n    { year: 2020, rate: 70.1, target: 72.5, firstTimeBuyers: 24.1 },\n    { year: 2021, rate: 68.9, target: 73.0, firstTimeBuyers: 21.9 },\n    { year: 2022, rate: 67.2, target: 73.5, firstTimeBuyers: 19.8 },\n    { year: 2023, rate: 65.8, target: 74.0, firstTimeBuyers: 18.2 },\n    { year: 2024, rate: 64.5, target: 74.5, firstTimeBuyers: 16.9 },\n    { year: 2025, rate: 63.8, target: 75.0, firstTimeBuyers: 16.1 }\n  ],\n  'Brampton': [\n    { year: 2019, rate: 74.2, target: 74.5, firstTimeBuyers: 31.2 },\n    { year: 2020, rate: 73.8, target: 75.0, firstTimeBuyers: 29.4 },\n    { year: 2021, rate: 73.1, target: 75.5, firstTimeBuyers: 27.1 },\n    { year: 2022, rate: 71.9, target: 76.0, firstTimeBuyers: 24.8 },\n    { year: 2023, rate: 70.8, target: 76.5, firstTimeBuyers: 22.9 },\n    { year: 2024, rate: 69.9, target: 77.0, firstTimeBuyers: 21.6 },\n    { year: 2025, rate: 69.4, target: 77.5, firstTimeBuyers: 20.8 }\n  ],\n  'Caledon': [\n    { year: 2019, rate: 78.5, target: 78.0, firstTimeBuyers: 22.1 },\n    { year: 2020, rate: 77.9, target: 78.5, firstTimeBuyers: 20.3 },\n    { year: 2021, rate: 76.8, target: 79.0, firstTimeBuyers: 18.2 },\n    { year: 2022, rate: 75.1, target: 79.5, firstTimeBuyers: 16.4 },\n    { year: 2023, rate: 73.6, target: 80.0, firstTimeBuyers: 15.1 },\n    { year: 2024, rate: 72.3, target: 80.5, firstTimeBuyers: 14.2 },\n    { year: 2025, rate: 71.8, target: 81.0, firstTimeBuyers: 13.8 }\n  ]\n}; ","import React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Line, ComposedChart } from 'recharts';\nimport { mortgageStressTestData, interestRateScenarios } from '../../data/affordability';\n\nfunction MortgageStressTestChart({ selectedRegion }) {\n  const [selectedHousingType, setSelectedHousingType] = useState('Detached');\n  const [viewMode, setViewMode] = useState('payment'); // 'payment', 'income', 'sensitivity'\n\n  const stressData = mortgageStressTestData[selectedRegion] || [];\n  \n  const housingTypes = ['Detached', 'Semi-Detached', 'Townhouse', 'Condo'];\n\n  // Transform data for different views\n  const getChartData = () => {\n    if (viewMode === 'sensitivity') {\n      const selectedTypeData = stressData.find(item => item.type === selectedHousingType);\n      if (!selectedTypeData) return [];\n      \n      return interestRateScenarios.map(scenario => ({\n        ...scenario,\n        qualifyingIncome: Math.round(selectedTypeData.qualifyingIncome * scenario.qualifyingMultiplier),\n        monthlyPayment: Math.round(selectedTypeData.currentPayment * scenario.qualifyingMultiplier)\n      }));\n    }\n    \n    return stressData.map(item => ({\n      type: item.type,\n      currentPayment: item.currentPayment,\n      stressPayment: item.stressPayment,\n      paymentIncrease: item.stressPayment - item.currentPayment,\n      currentIncome: item.qualifyingIncome,\n      stressIncome: item.stressQualifyingIncome,\n      incomeIncrease: item.stressQualifyingIncome - item.qualifyingIncome,\n      avgPrice: item.avgPrice,\n      downPayment: item.downPayment20\n    }));\n  };\n\n  const chartData = getChartData();\n  \n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      \n      if (viewMode === 'sensitivity') {\n        return (\n          <div className=\"bg-white p-4 rounded-lg shadow-xl border border-gray-200\">\n            <p className=\"font-bold text-gray-800 mb-2\">{data.label}</p>\n            <div className=\"space-y-1\">\n              <p className=\"text-sm\">\n                <span className=\"text-gray-600\">Interest Rate:</span>\n                <span className=\"font-medium ml-2\">{data.rate}%</span>\n              </p>\n              <p className=\"text-sm\">\n                <span className=\"text-gray-600\">Required Income:</span>\n                <span className=\"font-medium ml-2\">${data.qualifyingIncome.toLocaleString()}</span>\n              </p>\n              <p className=\"text-sm\">\n                <span className=\"text-gray-600\">Monthly Payment:</span>\n                <span className=\"font-medium ml-2\">${data.monthlyPayment.toLocaleString()}</span>\n              </p>\n            </div>\n          </div>\n        );\n      }\n      \n      return (\n        <div className=\"bg-white p-4 rounded-lg shadow-xl border border-gray-200\">\n          <p className=\"font-bold text-gray-800 mb-2\">{label}</p>\n          <div className=\"space-y-1\">\n            {viewMode === 'payment' ? (\n              <>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Current Payment:</span>\n                  <span className=\"font-medium ml-2\">${(data.currentPayment || 0).toLocaleString()}</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Stress Payment:</span>\n                  <span className=\"font-medium ml-2\">${(data.stressPayment || 0).toLocaleString()}</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Increase:</span>\n                  <span className=\"font-medium ml-2 text-red-600\">${(data.paymentIncrease || 0).toLocaleString()}</span>\n                </p>\n              </>\n            ) : viewMode === 'income' ? (\n              <>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Current Income Req:</span>\n                  <span className=\"font-medium ml-2\">${(data.currentIncome || 0).toLocaleString()}</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Stress Income Req:</span>\n                  <span className=\"font-medium ml-2\">${(data.stressIncome || 0).toLocaleString()}</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Increase:</span>\n                  <span className=\"font-medium ml-2 text-red-600\">${(data.incomeIncrease || 0).toLocaleString()}</span>\n                </p>\n              </>\n            ) : (\n              <p className=\"text-sm text-gray-600\">Data loading...</p>\n            )}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const formatCurrency = (value) => `$${(value / 1000).toFixed(0)}k`;\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6\">\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6\">\n        <h3 className=\"text-lg font-bold text-gray-800 flex items-center mb-4 lg:mb-0\">\n          <span className=\"mr-2\">🏦</span>\n          Mortgage Stress Test Analysis - {selectedRegion}\n        </h3>\n        \n        <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4\">\n          {/* View Mode Selection */}\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => setViewMode('payment')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${viewMode === 'payment'\n                  ? 'bg-red-600 text-white shadow-md'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              Payments\n            </button>\n            <button\n              onClick={() => setViewMode('income')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${viewMode === 'income'\n                  ? 'bg-red-600 text-white shadow-md'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              Income\n            </button>\n            <button\n              onClick={() => setViewMode('sensitivity')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${viewMode === 'sensitivity'\n                  ? 'bg-red-600 text-white shadow-md'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              Rate Sensitivity\n            </button>\n          </div>\n\n          {/* Housing Type Selection (for sensitivity analysis) */}\n          {viewMode === 'sensitivity' && (\n            <div className=\"flex space-x-2\">\n              {housingTypes.map((type) => (\n                <button\n                  key={type}\n                  onClick={() => setSelectedHousingType(type)}\n                  className={`\n                    px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                    ${selectedHousingType === type\n                      ? 'bg-blue-600 text-white shadow-md'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    }\n                  `}\n                >\n                  {type.replace('Semi-', 'Semi')}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Chart */}\n        <div className=\"lg:col-span-3\">\n          {chartData.length === 0 ? (\n            <div className=\"flex items-center justify-center h-96 bg-gray-50 rounded-lg\">\n              <div className=\"text-center\">\n                <p className=\"text-gray-500 text-lg\">No data available</p>\n                <p className=\"text-gray-400 text-sm\">Please check data configuration</p>\n              </div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={400}>\n            {viewMode === 'sensitivity' ? (\n              <ComposedChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis \n                  dataKey=\"label\"\n                  tick={{ fontSize: 11 }}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={80}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis \n                  yAxisId=\"left\"\n                  tickFormatter={formatCurrency}\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis \n                  yAxisId=\"right\"\n                  orientation=\"right\"\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                  tickFormatter={(value) => `${value}%`}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n                <Bar \n                  yAxisId=\"left\"\n                  dataKey=\"qualifyingIncome\" \n                  fill=\"#EF4444\" \n                  radius={[4, 4, 0, 0]}\n                  name=\"Required Income\"\n                />\n                <Line \n                  yAxisId=\"right\"\n                  type=\"monotone\" \n                  dataKey=\"rate\" \n                  stroke=\"#DC2626\" \n                  strokeWidth={3}\n                  dot={{ fill: '#DC2626', r: 4 }}\n                  name=\"Interest Rate (%)\"\n                />\n              </ComposedChart>\n            ) : (\n              <BarChart \n                key={viewMode} \n                data={chartData} \n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis \n                  dataKey=\"type\"\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis \n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n                \n                {/* Payment Bars */}\n                <Bar \n                  dataKey=\"currentPayment\" \n                  fill={viewMode === 'payment' ? \"#3B82F6\" : \"transparent\"} \n                  name=\"Current Payment\"\n                  hide={viewMode !== 'payment'}\n                />\n                <Bar \n                  dataKey=\"stressPayment\" \n                  fill={viewMode === 'payment' ? \"#EF4444\" : \"transparent\"} \n                  name=\"Stress Test Payment\"\n                  hide={viewMode !== 'payment'}\n                />\n                \n                {/* Income Bars */}\n                <Bar \n                  dataKey=\"currentIncome\" \n                  fill={viewMode === 'income' ? \"#10B981\" : \"transparent\"} \n                  name=\"Current Income Required\"\n                  hide={viewMode !== 'income'}\n                />\n                <Bar \n                  dataKey=\"stressIncome\" \n                  fill={viewMode === 'income' ? \"#EF4444\" : \"transparent\"} \n                  name=\"Stress Test Income Required\"\n                  hide={viewMode !== 'income'}\n                />\n              </BarChart>\n            )}\n            </ResponsiveContainer>\n          )}\n        </div>\n\n        {/* Summary Statistics */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-semibold text-gray-800\">Impact Analysis</h4>\n          \n          {viewMode !== 'sensitivity' && chartData.length > 0 && (\n            <>\n              <div className=\"p-3 bg-red-50 rounded-lg border-l-4 border-red-500\">\n                <p className=\"text-sm text-red-700 font-medium\">\n                  {viewMode === 'payment' ? 'Avg Payment Increase' : 'Avg Income Increase'}\n                </p>\n                <p className=\"text-2xl font-bold text-red-800\">\n                  ${viewMode === 'payment' \n                    ? Math.round(chartData.reduce((sum, item) => sum + item.paymentIncrease, 0) / chartData.length).toLocaleString()\n                    : Math.round(chartData.reduce((sum, item) => sum + item.incomeIncrease, 0) / chartData.length).toLocaleString()\n                  }\n                </p>\n                <p className=\"text-xs text-red-600\">\n                  Under stress test\n                </p>\n              </div>\n\n              <div className=\"p-3 bg-orange-50 rounded-lg border-l-4 border-orange-500\">\n                <p className=\"text-sm text-orange-700 font-medium\">Most Impacted</p>\n                <p className=\"text-lg font-bold text-orange-800\">\n                  {viewMode === 'payment' \n                    ? chartData.reduce((prev, current) => (prev.paymentIncrease > current.paymentIncrease) ? prev : current).type\n                    : chartData.reduce((prev, current) => (prev.incomeIncrease > current.incomeIncrease) ? prev : current).type\n                  }\n                </p>\n                <p className=\"text-xs text-orange-600\">\n                  Highest increase\n                </p>\n              </div>\n\n              <div className=\"p-3 bg-blue-50 rounded-lg border-l-4 border-blue-500\">\n                <p className=\"text-sm text-blue-700 font-medium\">Stress Test Rate</p>\n                <p className=\"text-2xl font-bold text-blue-800\">7.25%</p>\n                <p className=\"text-xs text-blue-600\">\n                  vs 5.25% current\n                </p>\n              </div>\n            </>\n          )}\n\n          {viewMode === 'sensitivity' && (\n            <div className=\"space-y-3\">\n              <div className=\"p-3 bg-red-50 rounded-lg border-l-4 border-red-500\">\n                <p className=\"text-sm text-red-700 font-medium\">Crisis Scenario</p>\n                <p className=\"text-lg font-bold text-red-800\">\n                  {chartData.find(d => d.rate === 9.0)?.qualifyingIncome.toLocaleString()}\n                </p>\n                <p className=\"text-xs text-red-600\">\n                  Required income at 9%\n                </p>\n              </div>\n              \n              <div className=\"p-3 bg-green-50 rounded-lg border-l-4 border-green-500\">\n                <p className=\"text-sm text-green-700 font-medium\">Historic Low</p>\n                <p className=\"text-lg font-bold text-green-800\">\n                  {chartData.find(d => d.rate === 4.0)?.qualifyingIncome.toLocaleString()}\n                </p>\n                <p className=\"text-xs text-green-600\">\n                  Required income at 4%\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-red-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-red-800 mb-1\">Risk Level</h5>\n          <p className=\"text-sm text-red-600\">\n            {viewMode === 'payment' && chartData.length > 0 && \n             chartData.reduce((sum, item) => sum + item.paymentIncrease, 0) / chartData.length > 2000 \n              ? 'High Impact' \n              : 'Moderate Impact'\n            }\n          </p>\n        </div>\n        \n        <div className=\"bg-orange-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-orange-800 mb-1\">Buyer Impact</h5>\n          <p className=\"text-sm text-orange-600\">\n            Reduced purchasing power under stress test\n          </p>\n        </div>\n        \n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-blue-800 mb-1\">Market Health</h5>\n          <p className=\"text-sm text-blue-600\">\n            Stress test ensures borrower protection\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MortgageStressTestChart;","import React, { useState } from 'react';\nimport { affordabilityGapData } from '../../data/affordability';\n\nfunction AffordabilityGapHeatmap() {\n  const [selectedRegion, setSelectedRegion] = useState('All Regions');\n  const [selectedDecile, setSelectedDecile] = useState(null);\n\n  const regions = Object.keys(affordabilityGapData);\n  const deciles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  // Get color intensity based on affordability rate\n  const getHeatmapColor = rate => {\n    if (rate <= 10) return 'bg-red-800';\n    if (rate <= 20) return 'bg-red-600';\n    if (rate <= 30) return 'bg-red-400';\n    if (rate <= 40) return 'bg-orange-500';\n    if (rate <= 50) return 'bg-yellow-400';\n    if (rate <= 60) return 'bg-yellow-300';\n    if (rate <= 70) return 'bg-green-300';\n    if (rate <= 80) return 'bg-green-400';\n    return 'bg-green-600';\n  };\n\n  const getTextColor = rate => {\n    return rate <= 30 ? 'text-white' : 'text-gray-800';\n  };\n\n  // Create heatmap data structure\n  const createHeatmapData = () => {\n    if (selectedRegion === 'All Regions') {\n      return regions.map(region => ({\n        region,\n        data: deciles.map(decile => {\n          const regionData = affordabilityGapData[region];\n          const decileData = regionData.find(d => d.decile === decile);\n          return {\n            decile,\n            affordabilityRate: decileData ? decileData.affordabilityRate : 0,\n            avgIncome: decileData ? decileData.avgIncome : 0,\n            avgHousePrice: decileData ? decileData.avgHousePrice : 0,\n          };\n        }),\n      }));\n    } else {\n      return [\n        {\n          region: selectedRegion,\n          data: affordabilityGapData[selectedRegion] || [],\n        },\n      ];\n    }\n  };\n\n  const heatmapData = createHeatmapData();\n\n  // Calculate statistics\n  const getAllRates = () => {\n    return regions.flatMap(region =>\n      affordabilityGapData[region].map(d => d.affordabilityRate)\n    );\n  };\n\n  const allRates = getAllRates();\n  const avgAffordability =\n    allRates.reduce((sum, rate) => sum + rate, 0) / allRates.length;\n  const minRate = Math.min(...allRates);\n  const maxRate = Math.max(...allRates);\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6\">\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6\">\n        <div>\n          <h3 className=\"text-lg font-bold text-gray-800 flex items-center mb-2\">\n            <span className=\"mr-2\">🔥</span>\n            Affordability Gap Heatmap\n          </h3>\n          <p className=\"text-sm text-gray-600\">\n            Percentage of households that can afford average home prices by\n            income decile\n          </p>\n        </div>\n\n        <div className=\"flex space-x-3 mt-4 lg:mt-0\">\n          <select\n            value={selectedRegion}\n            onChange={e => setSelectedRegion(e.target.value)}\n            className=\"px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"All Regions\">All Regions</option>\n            {regions.map(region => (\n              <option key={region} value={region}>\n                {region}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Heatmap Grid */}\n      <div className=\"mb-6\">\n        <div className=\"overflow-x-auto\">\n          <div className=\"min-w-full\">\n            {/* Header */}\n            <div className=\"grid grid-cols-11 gap-1 mb-2\">\n              <div className=\"text-xs font-medium text-gray-600 p-2\">\n                Region / Decile\n              </div>\n              {deciles.map(decile => (\n                <div\n                  key={decile}\n                  className=\"text-xs font-medium text-gray-600 text-center p-2\"\n                >\n                  D{decile}\n                </div>\n              ))}\n            </div>\n\n            {/* Heatmap Rows */}\n            {heatmapData.map(({ region, data }) => (\n              <div key={region} className=\"grid grid-cols-11 gap-1 mb-1\">\n                <div className=\"text-sm font-medium text-gray-800 p-2 bg-gray-50 rounded flex items-center\">\n                  {region.replace(' Region', '')}\n                </div>\n                {data.map(\n                  ({ decile, affordabilityRate, avgIncome, avgHousePrice }) => (\n                    <div\n                      key={`${region}-${decile}`}\n                      className={`\n                      ${getHeatmapColor(affordabilityRate)} ${getTextColor(affordabilityRate)}\n                      p-2 rounded text-center cursor-pointer transition-all duration-200 hover:scale-105 hover:shadow-md\n                      group relative\n                    `}\n                      onClick={() =>\n                        setSelectedDecile(\n                          selectedDecile === `${region}-${decile}`\n                            ? null\n                            : `${region}-${decile}`\n                        )\n                      }\n                    >\n                      <div className=\"text-xs font-bold\">\n                        {affordabilityRate}%\n                      </div>\n\n                      {/* Tooltip */}\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10 whitespace-nowrap\">\n                        <div className=\"font-bold\">\n                          {region} - Decile {decile}\n                        </div>\n                        <div>Affordability: {affordabilityRate}%</div>\n                        <div>Avg Income: ${avgIncome.toLocaleString()}</div>\n                        <div>Avg Price: ${avgHousePrice.toLocaleString()}</div>\n                        <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-t-gray-900\"></div>\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Color Legend */}\n      <div className=\"mb-6\">\n        <h4 className=\"text-sm font-semibold text-gray-800 mb-2\">\n          Affordability Rate Legend\n        </h4>\n        <div className=\"flex items-center space-x-1 text-xs\">\n          <span className=\"text-gray-600\">Low</span>\n          <div className=\"flex space-x-1\">\n            <div className=\"w-4 h-4 bg-red-800 rounded\"></div>\n            <div className=\"w-4 h-4 bg-red-600 rounded\"></div>\n            <div className=\"w-4 h-4 bg-red-400 rounded\"></div>\n            <div className=\"w-4 h-4 bg-orange-500 rounded\"></div>\n            <div className=\"w-4 h-4 bg-yellow-400 rounded\"></div>\n            <div className=\"w-4 h-4 bg-yellow-300 rounded\"></div>\n            <div className=\"w-4 h-4 bg-green-300 rounded\"></div>\n            <div className=\"w-4 h-4 bg-green-400 rounded\"></div>\n            <div className=\"w-4 h-4 bg-green-600 rounded\"></div>\n          </div>\n          <span className=\"text-gray-600\">High</span>\n          <div className=\"ml-4 text-gray-500\">\n            <span>\n              0%-10% | 11%-20% | 21%-30% | 31%-40% | 41%-50% | 51%-60% | 61%-70%\n              | 71%-80% | 81%+\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Summary Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-red-50 rounded-lg p-4 border-l-4 border-red-500\">\n          <h5 className=\"font-semibold text-red-800 mb-1\">Crisis Level</h5>\n          <p className=\"text-lg font-bold text-red-800\">{minRate}%</p>\n          <p className=\"text-xs text-red-600\">Lowest affordability rate</p>\n        </div>\n\n        <div className=\"bg-blue-50 rounded-lg p-4 border-l-4 border-blue-500\">\n          <h5 className=\"font-semibold text-blue-800 mb-1\">Average</h5>\n          <p className=\"text-lg font-bold text-blue-800\">\n            {avgAffordability.toFixed(1)}%\n          </p>\n          <p className=\"text-xs text-blue-600\">Overall affordability</p>\n        </div>\n\n        <div className=\"bg-green-50 rounded-lg p-4 border-l-4 border-green-500\">\n          <h5 className=\"font-semibold text-green-800 mb-1\">Best Case</h5>\n          <p className=\"text-lg font-bold text-green-800\">{maxRate}%</p>\n          <p className=\"text-xs text-green-600\">Highest affordability rate</p>\n        </div>\n\n        <div className=\"bg-purple-50 rounded-lg p-4 border-l-4 border-purple-500\">\n          <h5 className=\"font-semibold text-purple-800 mb-1\">Gap Severity</h5>\n          <p className=\"text-lg font-bold text-purple-800\">\n            {maxRate - minRate}%\n          </p>\n          <p className=\"text-xs text-purple-600\">Affordability range</p>\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-red-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-red-800 mb-2\">\n            Affordability Crisis\n          </h5>\n          <p className=\"text-sm text-red-600\">\n            Lower income deciles (1-4) face severe affordability challenges\n            across all regions, with rates below 20% in most areas.\n          </p>\n        </div>\n\n        <div className=\"bg-yellow-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-yellow-800 mb-2\">\n            Middle-Class Squeeze\n          </h5>\n          <p className=\"text-sm text-yellow-600\">\n            Even middle-income households (deciles 5-7) struggle with\n            affordability, particularly in Mississauga and Caledon.\n          </p>\n        </div>\n\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-blue-800 mb-2\">\n            Regional Variation\n          </h5>\n          <p className=\"text-sm text-blue-600\">\n            Brampton shows relatively better affordability across deciles, while\n            Caledon presents the greatest challenges.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AffordabilityGapHeatmap;\n","import React, { useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n} from 'recharts';\nimport { homeownershipTrends } from '../../data/affordability';\n\nfunction HomeownershipTrendsChart({ selectedRegion: propSelectedRegion }) {\n  const [selectedRegion, setSelectedRegion] = useState(\n    propSelectedRegion || 'Peel Region'\n  );\n  const [viewMode, setViewMode] = useState('rates'); // 'rates', 'gap', 'first-time'\n\n  // Sync with prop changes\n  React.useEffect(() => {\n    if (propSelectedRegion) {\n      setSelectedRegion(propSelectedRegion);\n    }\n  }, [propSelectedRegion]);\n\n  const regions = Object.keys(homeownershipTrends);\n  const trendsData = homeownershipTrends[selectedRegion] || [];\n\n  // Transform data based on view mode\n  const getChartData = () => {\n    if (viewMode === 'gap') {\n      return trendsData.map(item => ({\n        ...item,\n        gap: item.target - item.rate,\n        gapTrend: item.target - item.rate > 0 ? 'Below Target' : 'Above Target',\n      }));\n    }\n\n    if (viewMode === 'first-time') {\n      return trendsData.map(item => ({\n        ...item,\n        firstTimeBuyerGap: item.rate - item.firstTimeBuyers,\n      }));\n    }\n\n    return trendsData;\n  };\n\n  const chartData = getChartData();\n\n  // Calculate statistics\n  const currentRate = chartData[chartData.length - 1]?.rate || 0;\n  const currentTarget = chartData[chartData.length - 1]?.target || 0;\n  const rateChange =\n    chartData.length > 1\n      ? chartData[chartData.length - 1].rate - chartData[0].rate\n      : 0;\n  const avgGap =\n    chartData.reduce((sum, item) => sum + (item.target - item.rate), 0) /\n    chartData.length;\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n\n      return (\n        <div className=\"bg-white p-4 rounded-lg shadow-xl border border-gray-200\">\n          <p className=\"font-bold text-gray-800 mb-2\">{label}</p>\n          <div className=\"space-y-1\">\n            {viewMode === 'rates' && (\n              <>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Actual Rate:</span>\n                  <span className=\"font-medium ml-2\">{data.rate}%</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Target Rate:</span>\n                  <span className=\"font-medium ml-2\">{data.target}%</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Gap:</span>\n                  <span\n                    className={`font-medium ml-2 ${data.target - data.rate > 0 ? 'text-red-600' : 'text-green-600'}`}\n                  >\n                    {data.target - data.rate > 0 ? '-' : '+'}\n                    {Math.abs(data.target - data.rate).toFixed(1)}%\n                  </span>\n                </p>\n              </>\n            )}\n\n            {viewMode === 'gap' && (\n              <>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Target Gap:</span>\n                  <span\n                    className={`font-medium ml-2 ${data.gap > 0 ? 'text-red-600' : 'text-green-600'}`}\n                  >\n                    {data.gap.toFixed(1)}%\n                  </span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Status:</span>\n                  <span className=\"font-medium ml-2\">{data.gapTrend}</span>\n                </p>\n              </>\n            )}\n\n            {viewMode === 'first-time' && (\n              <>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Overall Rate:</span>\n                  <span className=\"font-medium ml-2\">{data.rate}%</span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">First-time Buyers:</span>\n                  <span className=\"font-medium ml-2\">\n                    {data.firstTimeBuyers}%\n                  </span>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"text-gray-600\">Difference:</span>\n                  <span className=\"font-medium ml-2\">\n                    {data.firstTimeBuyerGap.toFixed(1)}%\n                  </span>\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const formatPercent = value => `${value}%`;\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6\">\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6\">\n        <div>\n          <h3 className=\"text-lg font-bold text-gray-800 flex items-center mb-2\">\n            <span className=\"mr-2\">🏠</span>\n            Homeownership Rate Trends\n          </h3>\n          <p className=\"text-sm text-gray-600\">\n            Historical trends and target comparisons across regions\n          </p>\n        </div>\n\n        <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-4 lg:mt-0\">\n          {/* View Mode Selection */}\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => setViewMode('rates')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${\n                  viewMode === 'rates'\n                    ? 'bg-blue-600 text-white shadow-md'\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              Rates vs Target\n            </button>\n            <button\n              onClick={() => setViewMode('gap')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${\n                  viewMode === 'gap'\n                    ? 'bg-red-600 text-white shadow-md'\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              Target Gap\n            </button>\n            <button\n              onClick={() => setViewMode('first-time')}\n              className={`\n                px-3 py-2 text-sm font-medium rounded-lg transition-all duration-300\n                ${\n                  viewMode === 'first-time'\n                    ? 'bg-green-600 text-white shadow-md'\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }\n              `}\n            >\n              First-time Buyers\n            </button>\n          </div>\n\n          {/* Region Selection */}\n          <select\n            value={selectedRegion}\n            onChange={e => setSelectedRegion(e.target.value)}\n            className=\"px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            {regions.map(region => (\n              <option key={region} value={region}>\n                {region}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Chart */}\n        <div className=\"lg:col-span-3\">\n          <ResponsiveContainer width=\"100%\" height={400}>\n            {viewMode === 'gap' ? (\n              <AreaChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis\n                  dataKey=\"year\"\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis\n                  tickFormatter={formatPercent}\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                  domain={[0, 'dataMax + 1']}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n                <Area\n                  dataKey=\"gap\"\n                  name=\"Target Gap\"\n                  fill=\"#EF4444\"\n                  fillOpacity={0.3}\n                  stroke=\"#DC2626\"\n                  strokeWidth={2}\n                />\n              </AreaChart>\n            ) : (\n              <LineChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis\n                  dataKey=\"year\"\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis\n                  tickFormatter={formatPercent}\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                  domain={['dataMin - 2', 'dataMax + 2']}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n\n                {/* Rates vs Target Lines */}\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"rate\"\n                  stroke={viewMode === 'rates' ? '#3B82F6' : 'transparent'}\n                  strokeWidth={3}\n                  dot={{\n                    fill: viewMode === 'rates' ? '#3B82F6' : 'transparent',\n                    r: viewMode === 'rates' ? 4 : 0,\n                  }}\n                  name=\"Actual Rate\"\n                  hide={viewMode !== 'rates'}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"target\"\n                  stroke={viewMode === 'rates' ? '#EF4444' : 'transparent'}\n                  strokeWidth={2}\n                  strokeDasharray={viewMode === 'rates' ? '5 5' : '0'}\n                  dot={{\n                    fill: viewMode === 'rates' ? '#EF4444' : 'transparent',\n                    r: viewMode === 'rates' ? 3 : 0,\n                  }}\n                  name=\"Target Rate\"\n                  hide={viewMode !== 'rates'}\n                />\n\n                {/* First-time Buyers Lines */}\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"rate\"\n                  stroke={viewMode === 'first-time' ? '#3B82F6' : 'transparent'}\n                  strokeWidth={3}\n                  dot={{\n                    fill: viewMode === 'first-time' ? '#3B82F6' : 'transparent',\n                    r: viewMode === 'first-time' ? 4 : 0,\n                  }}\n                  name=\"Overall Rate\"\n                  hide={viewMode !== 'first-time'}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"firstTimeBuyers\"\n                  stroke={viewMode === 'first-time' ? '#10B981' : 'transparent'}\n                  strokeWidth={2}\n                  dot={{\n                    fill: viewMode === 'first-time' ? '#10B981' : 'transparent',\n                    r: viewMode === 'first-time' ? 3 : 0,\n                  }}\n                  name=\"First-time Buyers\"\n                  hide={viewMode !== 'first-time'}\n                />\n              </LineChart>\n            )}\n          </ResponsiveContainer>\n        </div>\n\n        {/* Summary Statistics */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-semibold text-gray-800\">Performance Summary</h4>\n\n          <div className=\"p-3 bg-blue-50 rounded-lg border-l-4 border-blue-500\">\n            <p className=\"text-sm text-blue-700 font-medium\">Current Rate</p>\n            <p className=\"text-2xl font-bold text-blue-800\">{currentRate}%</p>\n            <p className=\"text-xs text-blue-600\">2024 actual</p>\n          </div>\n\n          <div\n            className={`p-3 rounded-lg border-l-4 ${\n              currentRate >= currentTarget\n                ? 'bg-green-50 border-green-500'\n                : 'bg-red-50 border-red-500'\n            }`}\n          >\n            <p\n              className={`text-sm font-medium ${\n                currentRate >= currentTarget ? 'text-green-700' : 'text-red-700'\n              }`}\n            >\n              Target {currentRate >= currentTarget ? 'Met' : 'Gap'}\n            </p>\n            <p\n              className={`text-2xl font-bold ${\n                currentRate >= currentTarget ? 'text-green-800' : 'text-red-800'\n              }`}\n            >\n              {Math.abs(currentTarget - currentRate).toFixed(1)}%\n            </p>\n            <p\n              className={`text-xs ${\n                currentRate >= currentTarget ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {currentRate >= currentTarget ? 'Above target' : 'Below target'}\n            </p>\n          </div>\n\n          <div\n            className={`p-3 rounded-lg border-l-4 ${\n              rateChange >= 0\n                ? 'bg-green-50 border-green-500'\n                : 'bg-red-50 border-red-500'\n            }`}\n          >\n            <p\n              className={`text-sm font-medium ${\n                rateChange >= 0 ? 'text-green-700' : 'text-red-700'\n              }`}\n            >\n              Trend (2019-2024)\n            </p>\n            <p\n              className={`text-2xl font-bold ${\n                rateChange >= 0 ? 'text-green-800' : 'text-red-800'\n              }`}\n            >\n              {rateChange >= 0 ? '+' : ''}\n              {rateChange.toFixed(1)}%\n            </p>\n            <p\n              className={`text-xs ${\n                rateChange >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {rateChange >= 0 ? 'Increasing' : 'Declining'}\n            </p>\n          </div>\n\n          <div className=\"p-3 bg-gray-50 rounded-lg border-l-4 border-gray-400\">\n            <p className=\"text-sm text-gray-700 font-medium\">Avg Gap</p>\n            <p className=\"text-2xl font-bold text-gray-800\">\n              {avgGap.toFixed(1)}%\n            </p>\n            <p className=\"text-xs text-gray-600\">Historical average</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Regional Comparison */}\n      <div className=\"mt-6\">\n        <h4 className=\"font-semibold text-gray-800 mb-4\">\n          Regional Comparison (2024)\n        </h4>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {regions.map(region => {\n            const regionData = homeownershipTrends[region];\n            const latest = regionData[regionData.length - 1];\n            const isSelected = region === selectedRegion;\n            const isAboveTarget = latest.rate >= latest.target;\n\n            return (\n              <div\n                key={region}\n                onClick={() => setSelectedRegion(region)}\n                className={`\n                  p-4 rounded-lg cursor-pointer transition-all duration-200 border-2\n                  ${isSelected ? 'border-blue-500 bg-blue-50' : 'border-gray-200 bg-white hover:border-gray-300'}\n                `}\n              >\n                <h5 className=\"font-semibold text-gray-800 mb-2\">\n                  {region.replace(' Region', '')}\n                </h5>\n                <div className=\"space-y-1\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Rate:</span>\n                    <span className=\"font-bold text-gray-800\">\n                      {latest.rate}%\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Target:</span>\n                    <span className=\"font-medium text-gray-700\">\n                      {latest.target}%\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Status:</span>\n                    <span\n                      className={`text-xs font-medium px-2 py-1 rounded ${\n                        isAboveTarget\n                          ? 'bg-green-100 text-green-800'\n                          : 'bg-red-100 text-red-800'\n                      }`}\n                    >\n                      {isAboveTarget ? 'On Track' : 'Behind'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-red-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-red-800 mb-2\">Declining Trend</h5>\n          <p className=\"text-sm text-red-600\">\n            All regions showing declining homeownership rates, with targets\n            becoming increasingly difficult to achieve.\n          </p>\n        </div>\n\n        <div className=\"bg-orange-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-orange-800 mb-2\">\n            First-time Buyer Challenge\n          </h5>\n          <p className=\"text-sm text-orange-600\">\n            First-time buyer participation dropping significantly, indicating\n            barriers to market entry.\n          </p>\n        </div>\n\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h5 className=\"font-semibold text-blue-800 mb-2\">Policy Impact</h5>\n          <p className=\"text-sm text-blue-600\">\n            Growing gap between targets and reality suggests need for policy\n            intervention and affordability measures.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeownershipTrendsChart;\n","import React, { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { affordabilityThresholds2024 } from '../data/affordability';\nimport MortgageStressTestChart from './charts/MortgageStressTestChart';\nimport AffordabilityGapHeatmap from './charts/AffordabilityGapHeatmap';\nimport HomeownershipTrendsChart from './charts/HomeownershipTrendsChart';\n\nfunction AffordabilityThresholds({ selectedRegion = 'Peel Region' }) {\n  const [activeTab, setActiveTab] = useState('thresholds');\n\n  // Transform data for Recharts\n  const chartData = affordabilityThresholds2024.map(\n    ([decile, income, housePrice]) => ({\n      decile: `D${decile}`,\n      income: income / 1000, // Convert to thousands for better display\n      maxHousePrice: housePrice / 1000, // Convert to thousands\n    })\n  );\n\n  const formatCurrency = value => `$${value}k`;\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const decileNum = label.replace('D', '');\n      return (\n        <div className=\"bg-white p-4 rounded-lg shadow-xl border border-gray-200\">\n          <p className=\"font-bold text-gray-800 mb-2\">Decile {decileNum}</p>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm\">\n              <span className=\"text-gray-600\">Min Income:</span>\n              <span className=\"font-medium ml-2\">\n                ${(payload[0].value * 1000).toLocaleString()}\n              </span>\n            </p>\n            <p className=\"text-sm\">\n              <span className=\"text-gray-600\">Max House Price:</span>\n              <span className=\"font-medium ml-2\">\n                ${(payload[1].value * 1000).toLocaleString()}\n              </span>\n            </p>\n            <p className=\"text-xs text-gray-500 mt-2\">\n              Ratio: {(payload[1].value / payload[0].value).toFixed(1)}x\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const tabs = [\n    { id: 'thresholds', label: 'Affordability Thresholds', icon: '📊' },\n    { id: 'stress-test', label: 'Mortgage Stress Test', icon: '🏦' },\n    { id: 'heatmap', label: 'Affordability Gap Heatmap', icon: '🔥' },\n    { id: 'ownership-trends', label: 'Homeownership Trends', icon: '🏠' },\n  ];\n\n  return (\n    <div className=\"animate-fade-in\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\n          Housing Affordability Analysis\n        </h2>\n        <p className=\"text-gray-600\">\n          Comprehensive affordability analysis and stress testing\n        </p>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex flex-wrap border-b-2 border-gray-200 mb-6\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`\n              flex items-center space-x-2 py-3 px-6 font-medium transition-all duration-300\n              ${\n                activeTab === tab.id\n                  ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                  : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\n              }\n            `}\n          >\n            <span className=\"text-xl\">{tab.icon}</span>\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'thresholds' ? (\n        <div className=\"bg-white rounded-xl shadow-lg p-6\">\n          <div className=\"mb-6\">\n            <h3 className=\"text-xl font-bold text-gray-800 mb-2\">\n              Income Requirements by Decile\n            </h3>\n            <p className=\"text-gray-600\">\n              Maximum affordable house prices by income decile\n            </p>\n          </div>\n\n          <div className=\"h-96\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis\n                  dataKey=\"decile\"\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <YAxis\n                  tickFormatter={formatCurrency}\n                  tick={{ fontSize: 12 }}\n                  tickLine={false}\n                  axisLine={{ stroke: '#e5e7eb' }}\n                />\n                <Tooltip\n                  content={<CustomTooltip />}\n                  cursor={{ fill: 'rgba(59, 130, 246, 0.1)' }}\n                />\n                <Legend\n                  wrapperStyle={{ paddingTop: '20px' }}\n                  iconType=\"circle\"\n                />\n                <Bar\n                  dataKey=\"income\"\n                  name=\"Minimum Income\"\n                  fill=\"#3B82F6\"\n                  radius={[8, 8, 0, 0]}\n                />\n                <Bar\n                  dataKey=\"maxHousePrice\"\n                  name=\"Max House Price\"\n                  fill=\"#8B5CF6\"\n                  radius={[8, 8, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold text-blue-800 mb-1\">\n                Lowest Threshold\n              </h4>\n              <p className=\"text-sm text-blue-600\">\n                Decile 1: $35k income → $150k house\n              </p>\n            </div>\n            <div className=\"bg-purple-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold text-purple-800 mb-1\">\n                Median Threshold\n              </h4>\n              <p className=\"text-sm text-purple-600\">\n                Decile 5-6: $75-85k income → $350-425k house\n              </p>\n            </div>\n            <div className=\"bg-indigo-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold text-indigo-800 mb-1\">\n                Highest Threshold\n              </h4>\n              <p className=\"text-sm text-indigo-600\">\n                Decile 10: $160k income → $950k house\n              </p>\n            </div>\n          </div>\n        </div>\n      ) : activeTab === 'stress-test' ? (\n        <MortgageStressTestChart selectedRegion={selectedRegion} />\n      ) : activeTab === 'heatmap' ? (\n        <AffordabilityGapHeatmap />\n      ) : (\n        <HomeownershipTrendsChart selectedRegion={selectedRegion} />\n      )}\n    </div>\n  );\n}\n\nexport default AffordabilityThresholds;\n"],"names":["affordabilityThresholds2024","ownershipTargetSeries","rentalTargetSeries","densityTargetSeries","mortgageStressTestData","type","avgPrice","currentRate","stressRate","currentPayment","stressPayment","qualifyingIncome","stressQualifyingIncome","downPayment20","monthlyTax","monthlyInsurance","interestRateScenarios","rate","label","qualifyingMultiplier","affordabilityGapData","decile","affordabilityRate","avgIncome","avgHousePrice","homeownershipTrends","year","target","firstTimeBuyers","_ref","_chartData$find","_chartData$find2","selectedRegion","selectedHousingType","setSelectedHousingType","useState","viewMode","setViewMode","stressData","chartData","getChartData","selectedTypeData","find","item","map","scenario","_objectSpread","Math","round","monthlyPayment","paymentIncrease","currentIncome","stressIncome","incomeIncrease","downPayment","CustomTooltip","_ref2","active","payload","length","data","_jsxs","className","children","_jsx","toLocaleString","_Fragment","onClick","concat","replace","ResponsiveContainer","width","height","ComposedChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","fontSize","angle","textAnchor","tickLine","axisLine","YAxis","yAxisId","tickFormatter","value","toFixed","orientation","Tooltip","content","Legend","Bar","fill","radius","name","Line","strokeWidth","dot","r","BarChart","hide","reduce","sum","prev","current","d","setSelectedRegion","selectedDecile","setSelectedDecile","regions","Object","keys","deciles","getTextColor","heatmapData","region","decileData","allRates","flatMap","avgAffordability","minRate","min","maxRate","max","onChange","e","_chartData","_chartData2","propSelectedRegion","React","trendsData","gap","gapTrend","firstTimeBuyerGap","currentTarget","rateChange","avgGap","abs","formatPercent","AreaChart","domain","Area","fillOpacity","LineChart","regionData","latest","isSelected","isAboveTarget","activeTab","setActiveTab","income","housePrice","maxHousePrice","_ref3","decileNum","id","icon","tab","cursor","wrapperStyle","paddingTop","iconType","MortgageStressTestChart","AffordabilityGapHeatmap","HomeownershipTrendsChart"],"sourceRoot":""}