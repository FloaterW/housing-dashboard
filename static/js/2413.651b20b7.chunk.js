"use strict";(self.webpackChunkhousing_dashboard=self.webpackChunkhousing_dashboard||[]).push([[2413],{2086:(t,e,i)=>{function r(t){const{options:e,value:i}=t;return"number"==typeof e[i]}function n(t){let e="";for(const i in t){const n=t[i];if("boolean"==typeof n)n&&(e+="#define ".concat(i,"\n"));else if("number"==typeof n)e+="#define ".concat(i," ").concat(n.toFixed(),"\n");else if("object"==typeof n)if(r(n)){const{value:t,options:r,namespace:s}=n,o=s?"".concat(s,"_"):"";for(const i in r)e+="#define ".concat(o).concat(i," ").concat(r[i].toFixed(),"\n");e+="#define ".concat(i," ").concat(o).concat(t,"\n")}else{const t=n.options;let r=0;for(const i in t)e+="#define ".concat(t[i]," ").concat((r++).toFixed(),"\n");e+="#define ".concat(i," ").concat(t[n.value],"\n")}}return e}i.d(e,{I:()=>n})},12331:(t,e,i)=>{i.d(e,{H:()=>u});i(81806);var r=i(76460),n=i(30726),s=i(76718),o=i(61678),h=i(93345),c=i(89179),a=i(62881),l=i(80895);class u{constructor(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(h.vt.FramebufferObject,this);const r=f(e)?e:new l.g(this._context,e);if(this._colorAttachments.set(h.Nm.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(h.Nm.COLOR_ATTACHMENT0),null!=i)if(function(t){return f(t)||null!=t&&"pixelFormat"in t}(i))this._depthStencilTexture=f(i)?i:new l.g(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function(t){return null!=t&&"type"in t&&t.type===c.p.RenderBuffer}(i)?i:new a.l(this._context,i);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){var t,e;if(0===this._colorAttachments.size&&!this._glName)return;const i=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>{var i;return null===(i=this.detachColorTexture(e))||void 0===i?void 0:i.dispose()})),null!==(t=this.detachDepthStencilBuffer())&&void 0!==t&&t.dispose(),null!==(e=this.detachDepthStencilTexture())&&void 0!==e&&e.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(i),this._context.instanceCounter.decrement(h.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(h.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var t,e;const i=this._colorAttachments.get(h.Nm.COLOR_ATTACHMENT0);return null!==(t=null===i||void 0===i||null===(e=i.descriptor)||void 0===e?void 0:e.width)&&void 0!==t?t:0}get height(){var t,e;const i=this._colorAttachments.get(h.Nm.COLOR_ATTACHMENT0);return null!==(t=null===i||void 0===i||null===(e=i.descriptor)||void 0===e?void 0:e.height)&&void 0!==t?t:0}get usedMemory(){var t,e;return[...this._colorAttachments].reduce(((t,e)=>{let[i,r]=e;return t+r.usedMemory}),null!==(t=null===(e=this.depthStencil)||void 0===e?void 0:e.usedMemory)&&void 0!==t?t:0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t){var e;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.Nm.COLOR_ATTACHMENT0;if(!t)return;this._validateColorAttachmentPoint(i);const r=t.descriptor;this._validateTextureDescriptor(r),null!==(e=this.detachColorTexture(i))&&void 0!==e&&e.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,i)),this._colorAttachments.set(i,t)}detachColorTexture(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h.Nm.COLOR_ATTACHMENT0;const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.Nm.COLOR_ATTACHMENT0;const i=this._colorAttachments.get(e);i&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case c.p.Texture:return this._attachDepthStencilTexture(t);case c.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){var e;if(null==t)return;const i=t.descriptor;i.pixelFormat!==h.Ab.DEPTH_STENCIL&&i.pixelFormat!==h.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),i.dataType!==h.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._validateTextureDescriptor(i),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,h.nI)),null!==(e=this._depthStencilTexture)&&void 0!==e&&e.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;if(t&&this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,h.nI),this._context.bindFramebuffer(t)}return this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(h.R.FRAMEBUFFER,r,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(t.descriptor);i.framebufferRenderbuffer(h.R.FRAMEBUFFER,r,i.RENDERBUFFER,null),this._context.bindFramebuffer(e)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,i,r,n,s,o){(t<0||e<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const c=o.descriptor;o.descriptor.target!==h.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==(null===c||void 0===c?void 0:c.width)||null==(null===c||void 0===c?void 0:c.height)||t+i>this.width||e+r>this.height||n+i>c.width||s+r>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const a=this._context,u=a.bindTexture(o,l.g.TEXTURE_UNIT_FOR_UPDATES);a.setActiveTexture(l.g.TEXTURE_UNIT_FOR_UPDATES),a.bindFramebuffer(this),a.gl.copyTexSubImage2D(h.Ap.TEXTURE_2D,0,n,s,t,e,i,r),a.bindTexture(u,l.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,n,s,o){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,n,s,o)}async readPixelsAsync(t,e,i,r,n,o,c){const{gl:a}=this._context,l=s.g.createPixelPack(this._context,h._U.STREAM_READ,c.byteLength);this._context.bindBuffer(l);const u=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),a.readPixels(t,e,i,r,n,o,0),this._context.unbindBuffer(h.NZ.PIXEL_PACK_BUFFER),this._context.bindFramebuffer(u),await l.getSubDataAsync(c),l.dispose()}resize(t,e){var i,r;if(this.width===t&&this.height===e)return;const n={width:t,height:e};d(n,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(n.width,n.height))),null!==(i=this._depthStencilTexture)&&void 0!==i&&i.resize(n.width,n.height),this._initialized&&(d(n,this._context.parameters.maxRenderbufferSize),null!==(r=this._depthStencilBuffer)&&void 0!==r&&r.resize(n.width,n.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h.R.FRAMEBUFFER;const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();if(e.bindFramebuffer(t,i),this._colorAttachments.forEach(((e,i)=>this._framebufferTexture2D(e.glName,i,_(e),t))),this._depthStencilBuffer){const i=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,i,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,_(this._depthStencilTexture),t);(0,o.en)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.Nm.COLOR_ATTACHMENT0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h.Ap.TEXTURE_2D,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:h.R.FRAMEBUFFER,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this._context.gl.framebufferTexture2D(r,e,i,t,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(h.R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,n.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,n.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==h.Ap.TEXTURE_2D&&t.target!==h.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),d(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){d(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case h.yQ.DEPTH_COMPONENT16:case h.yQ.DEPTH_COMPONENT24:case h.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case h.yQ.DEPTH24_STENCIL8:case h.yQ.DEPTH32F_STENCIL8:case h.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case h.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===u._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;u._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const e=t-h.Nm.COLOR_ATTACHMENT0;e+1>u._MAX_COLOR_ATTACHMENTS&&r.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject","illegal attachment point for color attachment: ".concat(e+1,". Implementation supports up to ").concat(u._MAX_COLOR_ATTACHMENTS," color attachments"))}}function f(t){return null!=t&&"type"in t&&t.type===c.p.Texture}function d(t,e){const i=Math.max(t.width,t.height);if(i>e){r.A.getLogger("esri.views.webgl.FramebufferObject").warn("Resizing FBO attachment size ".concat(t.width,"x").concat(t.height," to device limit ").concat(e));const n=e/i;return t.width=Math.round(t.width*n),t.height=Math.round(t.height*n),!1}return!0}function _(t){return t.descriptor.target===h.Ap.TEXTURE_CUBE_MAP?h.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:h.Ap.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1},22475:(t,e,i)=>{i.r(e),i.d(e,{BufferObject:()=>r.g,FramebufferObject:()=>n.H,Program:()=>s.B,ProgramCache:()=>o.J,Renderbuffer:()=>h.l,ShaderCompiler:()=>c.Z,Texture:()=>a.g,VertexArrayObject:()=>l.Z,createProgram:()=>f.r,glslifyDefineMap:()=>u.I});var r=i(76718),n=i(12331),s=i(44488),o=i(46082),h=i(62881),c=i(78403),a=i(80895),l=i(36911),u=i(2086),f=i(26373)},46082:(t,e,i)=>{i.d(e,{J:()=>s});i(81806);var r=i(75941),n=i(44488);class s{constructor(t){this._rctx=t,this._store=new r.O}dispose(){this._store.forAll((t=>t.dispose())),this._store.clear()}acquire(t,e,i,r){const s=this._store.get(t,e);if(null!=s)return s.ref(),s;const o=new n.B(this._rctx,t,e,i,r);return o.ref(),this._store.set(t,e,o),o}get test(){}}},62881:(t,e,i)=>{i.d(e,{l:()=>o});var r=i(93345),n=i(89179),s=i(88800);class o{constructor(t,e){this._context=t,this._descriptor=e,this.type=n.p.RenderBuffer,this._context.instanceCounter.increment(r.vt.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:o,internalFormat:h,multisampled:c}=e;c?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,h,s,o):i.renderbufferStorage(i.RENDERBUFFER,h,s,o),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return(0,s.e)(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(r.vt.Renderbuffer,this),this._context=null)}}},75941:(t,e,i)=>{i.d(e,{O:()=>r});class r{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get(t,e){var i;return null===(i=this._outer.get(t))||void 0===i?void 0:i.get(e)}getInner(t){return this._outer.get(t)}set(t,e,i){const r=this._outer.get(t);r?r.set(e,i):this._outer.set(t,new Map([[e,i]]))}delete(t,e){const i=this._outer.get(t);i&&(i.delete(e),0===i.size&&this._outer.delete(t))}forEach(t){this._outer.forEach(((e,i)=>t(e,i)))}forAll(t){for(const e of this._outer.values())for(const i of e.values())t(i)}}},88800:(t,e,i)=>{i.d(e,{e:()=>s,q:()=>n});var r=i(27207);class n{constructor(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.internalFormat=t,this.width=e,this.height=i,this.multisampled=!1,this.samples=1}}function s(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,r.IB)(t.internalFormat)}},97255:(t,e,i)=>{i.d(e,{Qf:()=>c,Qh:()=>o,RS:()=>n,ez:()=>u,i5:()=>f,lM:()=>s,qK:()=>l});var r=i(78393);const n=16;function s(t){if(!t)return 0;let e=l;for(const i in t)t.hasOwnProperty(i)&&(e+=h(t[i],!1));return e}function o(t){if(!t)return 0;if("number"==typeof t[0])return c(t);if(Array.isArray(t))return function(t){const e=t.length;if(0===e||"number"==typeof t[0])return a(t,8);let i=u;for(let r=0;r<e;r++)i+=h(t[r]);return i}(t);let e=l;for(const i in t)t.hasOwnProperty(i)&&(e+=h(t[i]));return e}function h(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];switch(typeof t){case"object":return e?o(t):l;case"string":return function(t){return 32+t.length}(t);case"number":return n;case"boolean":return 4;default:return 8}}function c(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];return e.reduce(((t,e)=>t+(e?(0,r.iu)(e)?e.byteLength+f:Array.isArray(e)?a(e,n):0:0)),0)}function a(t,e){return u+t.length*e}const l=32,u=16,f=145}}]);
//# sourceMappingURL=2413.651b20b7.chunk.js.map