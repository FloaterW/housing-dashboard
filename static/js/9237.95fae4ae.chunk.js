"use strict";(self.webpackChunkhousing_dashboard=self.webpackChunkhousing_dashboard||[]).push([[9237],{8350:(e,t,i)=>{i.d(t,{H:()=>h});var s=i(35143),n=i(46053),r=(i(81806),i(76460),i(47249),i(85842)),a=i(69098),o=i(42553),l=i(40565),u=i(6409),c=i(88205);let d=class extends(a.A.ClonableMixin(o.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,s._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,s._)([(0,n.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,s._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,s._)([(0,n.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,s._)([(0,n.MZ)({types:c.uy,json:{write:!0,origins:{"web-scene":{types:c.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,s._)([(0,r.$)("esri.renderers.support.RasterPresetRenderer")],d);const f=d,h=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,s._)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,s._)([(0,n.MZ)({type:[f],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,s._)([(0,r.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},25213:(e,t,i)=>{i.d(t,{E9:()=>m,Tw:()=>h,X6:()=>p});var s=i(89379),n=i(3825),r=i(76797),a=i(19247),o=i(13312),l=i(23032),u=i(49653),c=i(54994),d=i(77725);async function f(e,t,i){var f,h,p,m,y,v,g,x,w,I;const b=(0,c.Dl)(e),{rasterFunction:A,sourceJSON:S}=t||{},R=A?JSON.stringify(A.rasterFunctionDefinition||A):null,T=(0,c.lF)((0,s.A)((0,s.A)({},b.query),{},{renderingRule:R,f:"json"})),_=(0,c.jV)(T,i);e=b.path;const C=S||await(0,n.A)(e,_).then((e=>e.data)),M=C.hasRasterAttributeTable?(0,n.A)("".concat(e,"/rasterAttributeTable"),_):null,O=C.hasColormap?(0,n.A)("".concat(e,"/colormap"),_):null,F=C.hasHistograms?(0,n.A)("".concat(e,"/histograms"),_):null,P=C.currentVersion>=10.3?(0,n.A)("".concat(e,"/keyProperties"),_):null,k=C.hasMultidimensions?(0,n.A)("".concat(e,"/multidimensionalInfo"),_):null,N=await Promise.allSettled([M,O,F,P,k]);let D=null;if(C.minValues&&C.minValues.length===C.bandCount){D=[];for(let e=0;e<C.minValues.length;e++)D.push({min:C.minValues[e],max:C.maxValues[e],avg:C.meanValues[e],stddev:C.stdvValues[e]})}const E=r.A.fromJSON(C.extent),B=Math.ceil(E.width/C.pixelSizeX-.1),L=Math.ceil(E.height/C.pixelSizeY-.1),J=o.A.fromJSON(C.spatialReference||C.extent.spatialReference),z="fulfilled"===N[0].status?null===(f=N[0].value)||void 0===f?void 0:f.data:null,V=null!==z&&void 0!==z&&null!==(h=z.features)&&void 0!==h&&h.length?d.A.fromJSON(z):null,j="fulfilled"===N[1].status?null===(p=N[1].value)||void 0===p?void 0:p.data.colormap:null,U=null!==j&&void 0!==j&&j.length?j:null,H="fulfilled"===N[2].status?null===(m=N[2].value)||void 0===m?void 0:m.data.histograms:null,Z=null!==H&&void 0!==H&&null!==(y=H[0])&&void 0!==y&&null!==(y=y.counts)&&void 0!==y&&y.length?H:null,G="fulfilled"===N[3].status&&null!==(v=null===(g=N[3].value)||void 0===g?void 0:g.data)&&void 0!==v?v:{},W="fulfilled"===N[4].status?null===(x=N[4].value)||void 0===x?void 0:x.data.multidimensionalInfo:null,q=null!==W&&void 0!==W&&null!==(w=W.variables)&&void 0!==w&&w.length?W:null;q&&q.variables.forEach((e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),null===(i=e.dimensions)||void 0===i||i.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:X,serviceDataType:Y}=C;X&&X!==G.DefaultVariable&&(G.DefaultVariable=X),(null===Y||void 0===Y?void 0:Y.includes("esriImageServiceDataTypeVector"))&&!Y.includes(G.DataType)&&(G.DataType=Y.replace("esriImageServiceDataType",""));let $=C.noDataValue;(null===(I=C.noDataValues)||void 0===I?void 0:I.length)&&C.noDataValues.some((e=>e!==$))&&($=C.noDataValues);const K=C.transposeInfo?new u.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.A({x:C.extent.xmin,y:C.extent.ymax,spatialReference:J}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(B,L))/Math.LN2-8)),transposeInfo:C.transposeInfo}):void 0;return new l.A({width:B,height:L,bandCount:C.bandCount,extent:r.A.fromJSON(C.extent),spatialReference:J,pixelSize:new a.A({x:C.pixelSizeX,y:C.pixelSizeY,spatialReference:J}),pixelType:C.pixelType.toLowerCase(),statistics:D,attributeTable:V,colormap:U,histograms:Z,keyProperties:G,noDataValue:$,multidimensionalInfo:q,storageInfo:K})}function h(e,t,i){return f(e,{sourceJSON:t},i)}function p(e,t,i){return f(e,{rasterFunction:t},i)}function m(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},26855:(e,t,i)=>{i.d(t,{A:()=>c});var s,n=i(35143),r=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(85842),l=i(75116);let u=s=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,n._)([(0,a.e)({GCSShiftXform:"gcs-shift"})],u.prototype,"type",void 0),(0,n._)([(0,r.MZ)()],u.prototype,"tolerance",void 0),u=s=(0,n._)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],u);const c=u},29754:(e,t,i)=>{i.d(t,{A:()=>y});var s,n=i(35143),r=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(28379),l=i(85842),u=i(17707),c=i(76797),d=i(19247),f=i(75116);function h(e,t,i){const{x:s,y:n}=t;if(i<2)return{x:e[0]+s*e[2]+n*e[4],y:e[1]+s*e[3]+n*e[5]};if(2===i){const t=s*s,i=n*n,r=s*n;return{x:e[0]+s*e[2]+n*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+s*e[3]+n*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=s*s,a=n*n,o=s*n,l=r*s,u=r*n,c=s*a,d=n*a;return{x:e[0]+s*e[2]+n*e[4]+r*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+d*e[18],y:e[1]+s*e[3]+n*e[5]+r*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+d*e[19]}}function p(e,t,i){const{xmin:s,ymin:n,xmax:r,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:s,y:a}),l.push({x:r,y:a}),l.push({x:s,y:n}),l.push({x:r,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:s,y:n+(a-n)*t/(e-1)}),l.push({x:r,y:n+(a-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:s+(r-s)*t/e,y:n}),l.push({x:s+(r-s)*t/e,y:a})}l=l.map((t=>h(e,t,i)));const u=l.map((e=>e.x)),d=l.map((e=>e.y));return new c.A({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,d),ymax:Math.max.apply(null,d),spatialReference:o})}let m=s=class extends f.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:s}=t;if(null===i||void 0===i||!i.length||null===s||void 0===s||!s.length||i.length!==s.length)return null;const n=[];for(let r=0;r<i.length;r++)n.push(i[r]),n.push(s[r]);return n}writeForwardCoefficients(e,t,i){const s=[],n=[];for(let r=0;r<(null===e||void 0===e?void 0:e.length);r++)r%2==0?s.push(e[r]):n.push(e[r]);t.coeffX=s,t.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,s,n,r,a]=e,o=s*a-r*n,l=r*n-s*a;return[(r*i-t*a)/o,(s*i-t*n)/l,a/o,n/l,-r/o,-s/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:s}=t;if(null===i||void 0===i||!i.length||null===s||void 0===s||!s.length||i.length!==s.length)return null;const n=[];for(let r=0;r<i.length;r++)n.push(i[r]),n.push(s[r]);return n}writeInverseCoefficients(e,t,i){const s=[],n=[];for(let r=0;r<(null===e||void 0===e?void 0:e.length);r++)r%2==0?s.push(e[r]):n.push(e[r]);t.inverseCoeffX=s,t.inverseCoeffY=n}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,n._)([(0,r.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,n._)([(0,r.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,n._)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,n._)([(0,u.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,n._)([(0,r.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,n._)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,n._)([(0,u.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,n._)([(0,r.MZ)()],m.prototype,"affectsPixelSize",null),(0,n._)([(0,a.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=s=(0,n._)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m);const y=m},49237:(e,t,i)=>{i.r(t),i.d(t,{default:()=>He});var s=i(89379),n=i(35143),r=i(16868),a=i(69098),o=i(50076),l=i(76460),u=i(77717),c=i(50346),d=i(68134),f=i(46053),h=i(40565),p=i(81806),m=(i(47249),i(85842)),y=i(25515),v=i(19502),g=i(65624),x=i(31362),w=i(24709),I=i(11270),b=i(94729),A=i(8350),S=i(21617),R=i(5682),T=i(78817),_=i(95363),C=i(44135),M=i(51939),O=i(44038),F=i(16175),P=i(10410),k=i(69539),N=i(76797),D=i(13312),E=i(38042),B=i(66486),L=i(52297);function J(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function z(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function V(e){const{axes:t}=e.domain,i=Object.keys(t),s=[],n=[];let r=-1,a=-1,o=[];for(let g=0;g<i.length;g++){const e=i[g];J(e)?r=g:z(e)&&(a=g);const l=t[e],u=[];if("values"in l){l.values.forEach((e=>u.push("string"==typeof e?new Date(e).getTime():e)));const e=u[1]-u[0];s.push([u[0]-.5*e,u[u.length-1]+.5*e]),n.push(e)}else{const{start:e,stop:t,num:i}=l,r=(t-e)/(i-1);s.push([e-.5*r,t+.5*r]),n.push(r);for(let s=0;s<i;s++)u.push(e+r*s)}o.push({name:e,values:u,extent:[u[0],u[u.length-1]]})}r>-1&&-1===a?a=0===r?1:0:a>-1&&-1===r?r=0===a?1:0:-1===a&&-1===r&&(r=0,a=1),o=o.filter(((e,t)=>!(t===r||t===a)));const{referencing:l}=e.domain,u=l.find((e=>e.coordinates.includes(i[r]))).system.id,c=null===u||void 0===u?void 0:u.slice(u.lastIndexOf("/")+1),d=null==c||"CRS84"===c?4326:Number(c),f=new D.A({wkid:d}),[h,p]=s[r],[m,y]=s[a],v=new N.A({xmin:h,xmax:p,ymin:m,ymax:y,spatialReference:f});return{width:Math.round(v.width/n[r]),height:Math.round(v.height/n[a]),extent:v,dimensions:o}}function j(e){var t;const i=(0,E.Z0)();return i&&null!==(t=e[i])&&void 0!==t?t:Object.values(e)[0]}function U(){return Math.round(255*Math.random())}function H(e){const t={},{parameters:i}=e;if(!i)return t;for(const[r,a]of Object.entries(i)){var s;const{type:e,description:i,unit:o,categoryEncoding:l,observedProperty:u}=a;if("Parameter"===e&&(t[r]={},i&&(t[r].description=j(i)),o&&(t[r].unit=o.label?j(o.label):null,t[r].symbol=null===(s=o.symbol)||void 0===s?void 0:s.value),l)){var n;const e=Object.entries(l).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let i=!1;(null===u||void 0===u||null===(n=u.categories)||void 0===n?void 0:n.length)&&(u.categories.forEach((t=>{if(!t.id)return;const s=t.id.slice(t.id.lastIndexOf("/")+1),n=e.find((e=>e.ClassName===s));if(!n)return;const r=t.label?j(t.label):null;if(n.Label=r,t.preferredColor){const e=k.A.fromHex(t.preferredColor);e&&(i=!0,n.Red=e.r,n.Green=e.g,n.Blue=e.b)}})),i&&e.forEach((e=>{null==e.Red&&(e.Red=U(),e.Green=U(),e.Blue=U())})));const s={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map((e=>({attributes:e})))};i&&s.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[r].attributeTable=s}}return t}function Z(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let s=0;s<e.length;s++){const n=e[s];null!=n&&(n<t&&(t=n),n>i&&(i=n))}return(0,L.X1)(t,i)}function G(e,t,i){const s=e.map(((e,i)=>({name:e,count:t[i]}))).sort(((e,t)=>e.name>t.name?-1:1)),n=(r=1,e=>r*=e.count);var r;const a=[...s.slice(1),{name:"",count:1}].reverse().map(n).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=a[s.findIndex((t=>{let{name:i}=t;return i===e[l]}))]*(i%t[l]),i=Math.floor(i/t[l]);return o}var W=i(15359),q=i(23032),X=i(68347),Y=i(52494),$=i(86866);let K=class extends P.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:n}=this,[r,a]=n.storageInfo.tileInfo.size,{sliceId:o}=s,{pixelBlocks:l}=this.source,u={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==n.dataType,tileSize:{width:r,height:a},level:e,row:t,col:i},c=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,s):(0,Y.J$)(u);return Promise.resolve(c)}const n=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(n)}async _open(e){var t,i;const n=this.source,{pixelBlocks:r,attributeTable:a,statistics:o,histograms:l,name:u,nativeExtent:c,transform:d}=n,f=r[0],{width:h,height:p,pixelType:m}=f,y=null!==(t=n.extent)&&void 0!==t?t:new N.A({xmin:-.5,ymin:.5,xmax:h-.5,ymax:p-.5,spatialReference:new D.A({wkid:3857})}),v=null!==(i=n.isPseudoSpatialReference)&&void 0!==i?i:!n.extent,g={x:y.width/h,y:y.height/p},x=(0,s.A)({},n.keyProperties);a&&(x.DataType="Thematic");const w=new q.A({width:h,height:p,pixelType:m,extent:y,nativeExtent:c,attributeTable:a,transform:d,pixelSize:g,spatialReference:y.spatialReference,bandCount:f.pixels.length,keyProperties:x,multidimensionalInfo:n.multidimensionalInfo,statistics:o,isPseudoSpatialReference:v,histograms:l});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(w),this.createRemoteDatasetStorageInfo(w,512,512),this._set("rasterInfo",w),this.updateTileInfo(),w.multidimensionalInfo?await this._buildMDimStats(n.pixelBlocks,w.multidimensionalInfo):await this._buildInMemoryRaster(f,{width:512,height:512},e),w.multidimensionalInfo||(this.source=null),this.datasetName=u}async _buildInMemoryRaster(e,t,i){var s,n,r;const{rasterInfo:a}=this,l=null!==(s=a.storageInfo.maximumPyramidLevel)&&void 0!==s?s:0,u="thematic"!==a.dataType,d=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:l,useBilinear:u},i):Promise.resolve((0,Y.lD)(e,t,l,u)),f=null!=a.statistics,h=null!=a.histograms,p=this.ioConfig.skipStatistics||f?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,$.f4)(e)),m=await(0,c.Lx)([d,p]);if(!m[0].value&&m[1].value)throw new o.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,f||(a.statistics=null===(n=m[1].value)||void 0===n?void 0:n.statistics),h||(a.histograms=null===(r=m[1].value)||void 0===r?void 0:r.histograms)}async _buildMDimStats(e,t,i){for(let s=0;s<t.variables.length;s++){const n=t.variables[s];if(n.statistics)continue;const r=n.dimensions.map((e=>{var t,i,s;return new W.A({variableName:n.name,dimensionName:e.name,values:[null!==(t=null===(i=e.values)||void 0===i?void 0:i[0])&&void 0!==t?t:null===(s=e.extent)||void 0===s?void 0:s[0]],isSlice:!0})})),a=(0,X.NG)(r,t),o=null==a?null:e[a];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,$.eH)(o);n.statistics=l.statistics,n.histograms||(n.histograms=l.histograms)}}};(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),(0,n._)([(0,f.MZ)()],K.prototype,"source",void 0),(0,n._)([(0,f.MZ)()],K.prototype,"url",null),K=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],K);const Q=K;var ee=i(77725);let te=class extends P.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:s,attributeTable:n,bandNames:r}=await this._fetchData(e),{statistics:a,histograms:o}=(0,$.eH)(i[0]),l=null===r||void 0===r?void 0:r.map((e=>({BandName:e}))),u={DataType:n?"Thematic":s?"Scientific":"Generic",BandProperties:l},c=new Q({source:{extent:t,pixelBlocks:i,attributeTable:n?ee.A.fromJSON(n):null,multidimensionalInfo:s,statistics:a,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await c.open(),this._inMemoryRaster=c;const d=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",d.slice(0,d.indexOf("."))),this._set("rasterInfo",c.rasterInfo)}async _fetchData(e){var t,i,s,n;const r=null!==(t=this.source)&&void 0!==t?t:(await this.request(this.url,{signal:null===e||void 0===e?void 0:e.signal})).data,a="imagery-tile-layer:open-coverage-json";if("coverage"!==(null===(i=r.type)||void 0===i?void 0:i.toLowerCase())||"grid"!==(null===(s=r.domain)||void 0===s||null===(s=s.domainType)||void 0===s?void 0:s.toLowerCase()))throw new o.A(a,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new o.A(a,"Missing ranges in the grid coverage data");if(null===(n=r.domain.referencing)||void 0===n||!n.length)throw new o.A(a,"Missing domain referencing in the grid coverage data");const l=Object.values(r.ranges);for(let u=0;u<l.length;u++){const{axisNames:e,shape:t,type:i,values:s}=l[u];if(!("ndarray"===i.toLowerCase()&&null!==s&&void 0!==s&&s.length&&null!==e&&void 0!==e&&e.length&&null!==t&&void 0!==t&&t.length))throw new o.A(a,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!J(e[e.length-1])||!z(e[e.length-2]))throw new o.A(a,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){var t;const{width:i,height:s,extent:n,dimensions:r}=V(e),{ranges:a}=e,o=Object.keys(a).sort(((e,t)=>e<t?-1:1)),l=[];for(let h=0;h<o.length;h++){const e=o[h];(null===r||void 0===r?void 0:r.length)&&l.push({name:e,dimensions:r})}const u=H(e);l.forEach((e=>u[e.name]&&Object.assign(e,u[e.name])));const c=l.length?{variables:l}:void 0,d=[];for(let h=0;h<o.length;h++){const e=o[h],{values:t,dataType:n,axisNames:l,shape:u}=a[e],c=u.length>2?h*u.slice(0,-2).reduce(((e,t)=>e*t)):0,f=l.slice(0,-2),p=u.slice(0,-2),m="float"===n?"f32":Z(t),y=i*s,v=t.length/y;for(let a=0;a<v;a++){const e=B.A.createEmptyBand(m,y),n=new Uint8Array(y).fill(255);let o=!1;const l=a*y;for(let i=0;i<y;i++){const s=t[l+i];null==s?(n[i]=0,o=!0):e[i]=s}if(0===h||null!==r&&void 0!==r&&r.length){const t=new B.A({width:i,height:s,mask:o?n:null,pixels:[e],pixelType:m});t.updateStatistics(),null!==r&&void 0!==r&&r.length?d[G(f,p,a)+c]=t:d.push(t)}else{const t=d[a];t.pixels.push(e),o?t.mask&&(t.mask=B.A.combineBandMasks([t.mask,n])):t.mask=o?n:null}}}const f=null===(t=Object.values(u).find((e=>e.attributeTable)))||void 0===t?void 0:t.attributeTable;return{extent:n,pixelBlocks:d,multidimensionalInfo:c,attributeTable:f,bandNames:c?void 0:o}}(r)}};(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),(0,n._)([(0,f.MZ)({constructOnly:!0})],te.prototype,"source",void 0),te=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],te);const ie=te;var se=i(18690),ne=i(80963),re=i(86769),ae=i(29754);function oe(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function le(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new D.A({wkid:t});if(e=String(e).trim(),(0,ne.jp)(e))return new D.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),n=i.indexOf("PROJCS"),r=n>-1?n:i.indexOf("GEOGCS");if(-1===r)return null;const a=e.slice(r,e.lastIndexOf("]",s)+1).trim(),o=e.slice(s,e.lastIndexOf("]")).trim();t=ue(a);const l=new D.A(t?{wkid:t}:{wkt:a}),u=ue(o);return u&&(l.vcsWkid=u),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=ue(e),new D.A(0!==t?{wkid:t}:{wkt:e})):null}function ue(e){var t;const i=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),s=i[i.length-1].split(","),n=null===(t=s[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(s[1]);if(!isNaN(e)&&0!==e)return e}return 0}function ce(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if((0,re.g7)(e,"SRS")){if(!i.spatialReference){const t=(0,re.mX)(e);i.spatialReference=le(t)}}else if((0,re.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:s}=function(e){var t;const i=(0,re.V6)(e,"GeodataXform"),s=le((0,re.v7)(i,"SpatialReference/WKID")||(0,re.mX)(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:s,transform:null};const n=null!==(t=(0,re.v7)(i,"PolynomialOrder"))&&void 0!==t?t:1,r=(0,re.Ui)(i,"CoeffX/Double"),a=(0,re.Ui)(i,"CoeffY/Double"),o=(0,re.Ui)(i,"InverseCoeffX/Double"),l=(0,re.Ui)(i,"InverseCoeffY/Double"),u=oe(r,a),c=oe(o,l);return{spatialReference:s,transform:u&&c&&u.length&&c.length?new ae.A({spatialReference:s,polynomialOrder:n,forwardCoefficients:u,inverseCoefficients:c}):null}}(e);i.transform=s,i.spatialReference||(i.spatialReference=t)}else(0,re.IC)(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=(0,re.mX)(e)));else if((0,re.g7)(e,"PAMRasterBand")){const t=function(e){var t;const i=(0,re.v7)(e,"NoDataValue"),s=(0,re.V6)(e,"Histograms/HistItem"),n=(0,re.v7)(s,"HistMin"),r=(0,re.v7)(s,"HistMax"),a=(0,re.v7)(s,"BucketCount"),o=null===(t=(0,re.mX)(s,"HistCounts"))||void 0===t?void 0:t.split("|").map((e=>Number(e)));let l,u,c,d;(0,re.IC)(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":d=i}}));const f=(0,re.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=n&&null!=r?{min:n,max:r,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:d}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const s=i.rasterBands;if(s.length){const e=!!s[0].statistics;i.statistics=e?s.map((e=>e.statistics)).filter(se.Ru):null;const t=!!s[0].histogram;i.histograms=t?s.map((e=>e.histogram)).filter(se.Ru):null}return i}var de=i(37267);let fe=class extends P.A{fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new D.A({wkid:3857})),(null===n||void 0===n?void 0:n.length)&&null==s&&(s=(0,$.Pg)(n));const{width:o,height:l}=t;let u=new N.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const c=r?r.forwardTransform(u):u;let d=!0;if(r){const e=r.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(r=null,u=c)}const f=new Q({source:{extent:c,nativeExtent:u,transform:r,pixelBlocks:[t],statistics:s,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,de.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new o.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),n="gif"===s||"bmp"===s||!(0,p.A)("ios"),r=await this.decodePixelBlock(t,{format:s,useCanvas:n,hasNoZlibMask:!0});if(null==r)throw new o.A("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(e){var t;const i=null===e||void 0===e?void 0:e.signal,{skipExtensions:s=[],skipMapInfo:n}=this.ioConfig,r=n||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=o&&s.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),u=await(0,c.Lx)([r,l]);if(null!==i&&void 0!==i&&i.aborted)throw(0,c.NK)();const d=ce(null===(t=u[0].value)||void 0===t?void 0:t.data);if(!d.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;d.transform=6===(null===e||void 0===e?void 0:e.length)?new ae.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return d}};(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],fe);const he=fe;var pe=i(30726),me=i(90534),ye=i(19247),ve=i(49653),ge=i(88235),xe=i(82356),we=i(26855),Ie=i(25213);let be=class extends P.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:n,extent:r}=this.rasterInfo,{transposeInfo:a}=n,o=null!=a&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const l=o?0:n.maximumPyramidLevel-e+this._levelOffset,u="".concat(this.url,"/tile/").concat(l,"/").concat(t,"/").concat(i),c=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:d}=await this.request(u,{query:c,responseType:"array-buffer",signal:s.signal});if(!d)return null;const f=o?a.tileSize:n.tileInfo.size,h=await this.decodePixelBlock(d,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==h)return null;const p=n.blockBoundary[e];if("jpg"!==n.compression||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return h;const{origin:m,blockWidth:y,blockHeight:v}=n,{x:g,y:x}=this.getPyramidPixelSize(e),w=Math.round((r.xmin-m.x)/g)%y,I=Math.round((r.xmax-m.x)/g)%y||y,b=Math.round((m.y-r.ymax)/x)%v,A=Math.round((m.y-r.ymin)/x)%v||v,S=i===p.minCol?w:0,R=t===p.minRow?b:0,T=i===p.maxCol?I:y,_=t===p.maxRow?A:v;return(0,Y.z$)(h,{x:S,y:R},{width:T-S,height:_-R}),h}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){var i;const s=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),r=await Promise.all([s,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),null!==(i=r[1])&&void 0!==i&&null!==(i=i[0])&&void 0!==i&&null!==(i=i.counts)&&void 0!==i&&i.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-s+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch(o){}if(r--,s++,i=this.identifyPixelLocation(a,s,t.datumTransformation),null===i)return null}return-1===r||null==i?null:s}async _open(e){var t,i,n,r,a;const l=null===e||void 0===e?void 0:e.signal,u=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:l});u.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=u.data;if(this.sourceJSON=c,!c)throw new o.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new o.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=c.name)||void 0===i?void 0:i.slice(c.name.indexOf("/")+1))&&void 0!==t?t:"";const d=await this._fetchRasterInfo({signal:l});if(null==d)throw new o.A("image-server-raster:open","cannot initialize image service");(0,Ie.E9)(d,c);const f="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:n,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return ge.A.fromJSON((0,s.A)((0,s.A)({},e),{},{lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=r&&t<=a}))}));if(0!==i&&0!==n){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,a=n?t(n):-1/0;return ge.A.fromJSON((0,s.A)((0,s.A)({},e),{},{lods:e.lods.filter((e=>{const i=t(e.scale);return i<=r&&i>=a}))}))}return ge.A.fromJSON(e)}(c.tileInfo,c):ge.A.fromJSON(c.tileInfo);(0,pe.Lw)(f);const[h,p]=this._computeMinMaxLOD(d,f),{extent:m,pixelSize:y}=d,v=.5/d.width*y.x,g=Math.max(y.x,y.y),{lods:x}=f;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(y.x-y.y)>v||!x.some((e=>Math.abs(e.resolution-g)<v)))&&(y.x=y.y=h.resolution,d.width=Math.ceil((m.xmax-m.xmin)/y.x-.1),d.height=Math.ceil((m.ymax-m.ymin)/y.y-.1));const w=h.level-p.level,[I,b]=f.size,A=[],S=[];x.forEach(((e,t)=>{e.level>=p.level&&e.level<=h.level&&A.push({x:e.resolution,y:e.resolution}),t<x.length-1&&S.push(Math.round(10*e.resolution/x[t+1].resolution)/10)})),A.sort(((e,t)=>e.x-t.x));const R=this.computeBlockBoundary(m,I,b,f.origin,A,w),T=A.length>1?A.slice(1):null;let _;c.transposeInfo&&(_={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!==(n=null===(r=d.keyProperties)||void 0===r?void 0:r._yxs.PacketSize)&&void 0!==n?n:0});const C=S.length<=1||S.length>=3&&S.slice(0,-1).every((e=>e===S[0]))?null!==(a=S[0])&&void 0!==a?a:2:Math.round(10/(p.resolution/h.resolution)**(-1/w))/10;if(d.storageInfo=new ve.A({blockWidth:f.size[0],blockHeight:f.size[1],pyramidBlockWidth:f.size[0],pyramidBlockHeight:f.size[1],pyramidResolutions:T,pyramidScalingFactor:C,compression:f.format,origin:f.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:f,transposeInfo:_,blockBoundary:R}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new we.A,e.extent=e.transform.forwardTransform(t))}(d),this._set("rasterInfo",d),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:d.storageInfo.tileInfo,parsedUrl:(0,me.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new xe.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),n=D.A.fromJSON(t.spatialReference||e.spatialReference),r=new ye.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new q.A({width:i,height:s,bandCount:3,extent:N.A.fromJSON(e),spatialReference:n,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,Ie.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.slices})).catch((()=>null)):null,r=await Promise.all([s,n]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){var i,s;const{pixelSize:n}=e,r=.5/e.width*n.x,{lods:a}=t,o=t.lodAt(Math.max.apply(null,a.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,a.map((e=>e.level)))),{tileType:u}=this;if("Map"===u)return this._levelOffset=a[0].level,[o,l];var c;if("Raster"===u)return[null!==(c=a.find((e=>e.resolution===n.x)))&&void 0!==c?c:o,l];const{minScale:d,maxScale:f}=this.sourceJSON;let h=o;f>0&&(h=a.find((e=>Math.abs(e.scale-f)<r)),h||(h=null!==(i=a.filter((e=>e.scale>f)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])&&void 0!==i?i:o));let p=l;return d>0&&(p=null!==(s=a.find((e=>Math.abs(e.scale-d)<r)))&&void 0!==s?s:l,this._levelOffset=p.level-l.level),[h,p]}};(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),(0,n._)([(0,f.MZ)()],be.prototype,"tileType",void 0),be=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],be);const Ae=be;var Se=i(10798);const Re=new Map;Re.set("Int8","s8"),Re.set("UInt8","u8"),Re.set("Int16","s16"),Re.set("UInt16","u16"),Re.set("Int32","s32"),Re.set("UInt32","u32"),Re.set("Float32","f32"),Re.set("Float64","f32"),Re.set("Double64","f32");const Te=new Map;Te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let _e=class extends P.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:n,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:u}=this.rasterInfo,{ranges:c,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!c||0===c.length)return null;if(0===c[0].from&&0===c[0].to){const e=new Uint8Array(n*r);return new B.A({width:n,height:r,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let y=0;for(y=0;y<p;y++)h&&!h.includes(y)||m.push(this.request(this._files.data,{range:{from:c[y].from,to:c[y].to},responseType:"array-buffer",signal:s.signal}));const v=await Promise.all(m),g=v.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),x=new Uint8Array(g),w=[];let I=0;for(y=0;y<p;y++)w.push(I),x.set(new Uint8Array(v[y].data),I),I+=v[y].data.byteLength;const b=Te.get(this.rasterInfo.storageInfo.compression).decoderFormat,A=await this.decodePixelBlock(x.buffer,{width:n,height:r,format:b,planes:(null===h||void 0===h?void 0:h.length)||l,offsets:w,pixelType:u});if(null==A)return null;let{noDataValue:S}=this.rasterInfo;if(null!=S&&"lerc"!==b&&!A.mask&&(S=S[0],null!=S)){const e=A.width*A.height,t=new Uint8Array(e);if(Math.abs(S)>1e24)for(y=0;y<e;y++)Math.abs((A.pixels[0][y]-S)/S)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)A.pixels[0][y]!==S&&(t[y]=1);A.mask=t}let R=0,T=0;if(d!==n||f!==r){let e=A.mask;if(e)for(y=0;y<r;y++)if(T=y*n,y<f)for(R=d;R<n;R++)e[T+R]=0;else for(R=0;R<n;R++)e[T+R]=0;else for(e=new Uint8Array(n*r),A.mask=e,y=0;y<f;y++)for(T=y*n,R=0;R<d;R++)e[T+R]=1}return A}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:n}=this._parseHeader(i.data),{skipMapInfo:r,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!r){var o;const t=await this._fetchAuxiliaryData(e);null!=t&&(s.statistics=null!==(o=t.statistics)&&void 0!==o?o:s.statistics,s.histograms=t.histograms,t.histograms&&null==s.statistics&&(s.statistics=(0,$.Pg)(t.histograms)))}r&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=n;const l=await this.request(n.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,s,n,r,a;if(Se.Z){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),s=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(a=0;a<4;a++)s[4*r+a]=i[4*r+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}(l.data);const{blockWidth:u,blockHeight:c}=this.rasterInfo.storageInfo,d=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:h}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let y=0,v=-1;for(;y<this._storageIndex.length;){v++;const e=Math.ceil(f/u/d**v)-1,t=Math.ceil(h/c/d**v)-1;y+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,v>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=v),this.updateTileInfo()}_getBandSegmentCount(){return Te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let u,c,d,f=0,h=0;for(d=0;d<e;d++)h=r**d,u=Math.ceil(a/s/h),c=Math.ceil(o/n/h),f+=u*c;h=r**e,u=Math.ceil(a/s/h),c=Math.ceil(o/n/h),f+=t*u+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const v=[];for(let g=0;g<l;g++)m=p[4*g]*2**32+p[4*g+1],y=m+p[4*g+2]*2**32+p[4*g+3],v.push({from:m,to:y});return{ranges:v,actualTileWidth:i<u-1?s:Math.ceil(a/h)-s*(u-1),actualTileHeight:t<c-1?n:Math.ceil(o/h)-n*(c-1)}}_parseHeader(e){const t=(0,re.V6)(e,"MRF_META/Raster");if(!t)throw new o.A("mrf:open","not a valid MRF format");const i=(0,re.V6)(t,"Size"),s=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),a=((0,re.mX)(t,"Compression")||"none").toLowerCase();if(!Te.has(a))throw new o.A("mrf:open","currently does not support compression "+a);const l=(0,re.mX)(t,"DataType")||"UInt8",u=Re.get(l);if(null==u)throw new o.A("mrf:open","currently does not support pixel type "+l);const c=(0,re.V6)(t,"PageSize"),d=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),h=(0,re.V6)(t,"DataValues");let p,m;if(h&&(m=h.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),(0,re.V6)(e,"MRF_META/CachedSource"))throw new o.A("mrf:open","currently does not support MRF referencing other data files");const y=(0,re.V6)(e,"MRF_META/GeoTags"),v=(0,re.V6)(y,"BoundingBox");let g,x=!1;if(null!=v){var w;const e=parseFloat(v.getAttribute("minx")),t=parseFloat(v.getAttribute("miny")),i=parseFloat(v.getAttribute("maxx")),s=parseFloat(v.getAttribute("maxy")),n=(0,re.mX)(y,"Projection")||"";let r=D.A.WGS84;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(r=new D.A({wkid:e}))}else r=null!==(w=le(n))&&void 0!==w?w:D.A.WGS84;else x=!0,r=new D.A({wkid:3857});g=new N.A(e,t,i,s),g.spatialReference=r}else x=!0,g=new N.A({xmin:-.5,ymin:.5-n,xmax:s-.5,ymax:.5,spatialReference:new D.A({wkid:3857})});const I=(0,re.V6)(e,"MRF_META/Rsets"),b=parseInt((null===I||void 0===I?void 0:I.getAttribute("scale"))||"2",10),A=g.spatialReference,S=new ve.A({origin:new ye.A({x:g.xmin,y:g.ymax,spatialReference:A}),blockWidth:d,blockHeight:f,pyramidBlockWidth:d,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:b}),R=new ye.A({x:g.width/s,y:g.height/n,spatialReference:A}),T=new q.A({width:s,height:n,extent:g,isPseudoSpatialReference:x,spatialReference:A,bandCount:r,pixelType:u,pixelSize:R,noDataValue:p,storageInfo:S}),_=(0,re.mX)(e,"datafile"),C=(0,re.mX)(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:_||this.url.replace(".mrf",Te.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ce(t)}catch(t){return null}}};(0,n._)([(0,f.MZ)()],_e.prototype,"_files",void 0),(0,n._)([(0,f.MZ)()],_e.prototype,"_storageIndex",void 0),(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),_e=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.MRFRaster")],_e);const Ce=_e;var Me=i(50611);function Oe(e){const t=e.fields,i=e.records,s=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),r=n.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[s]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}class Fe{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),n=t.getUint16(8,!0),r=t.getUint16(10,!0),a={version:i,recordCount:s,headerByteCount:n,recordByteCount:r};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Me.w)(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<s&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,Me.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.slice(0,4),10),parseInt(s.slice(4,6),10)-1,parseInt(s.slice(6,8),10)))}o+=t.length})),u.push(i)):o+=r}}return{header:a,fields:l,records:u,recordSet:Oe({fields:l,records:u})}}}var Pe=i(87018),ke=i(48613);const Ne=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},De=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let Ee=class extends P.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i){var s;let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(s=this._headerInfo)||void 0===s||!s.isSupported||this.isBlockOutside(e,t,i))return null;const r=await this._fetchRawTiffTile(e,t,i,!1,n);if(null!=r&&this._headerInfo.hasMaskBand){const s=await this._fetchRawTiffTile(e,t,i,!0,n);null!=s&&s.pixels[0]instanceof Uint8Array&&(r.mask=s.pixels[0])}return r}async _open(e){var t,i;const n=e?e.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new o.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:u,isBigTiff:c}=(0,Pe.uT)(r),d=[];await this._readIFDs(d,r,a,u,0,c?8:4,n);const{imageInfo:f,rasterInfo:h}=function(e){var t,i;const n=(0,Pe.uc)(e),{width:r,height:a,tileWidth:o,tileHeight:l,planes:u,pixelType:c,compression:d,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidBlockWidth:p,pyramidBlockHeight:m,pyramidResolutions:y,tileBoundary:v,affine:g,metadata:x}=n,w=(null===(t=n.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=n.extent.spatialReference)||void 0===i?void 0:i.wkid);let I=le(w),b=!!n.isPseudoGeographic;null==I&&(b=!0,I=new D.A({wkid:3857}));const A=new N.A((0,s.A)((0,s.A)({},n.extent),{},{spatialReference:I})),S=new ye.A(A?{x:A.xmin,y:A.ymax,spatialReference:I}:{x:0,y:0}),R=new ve.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:p,pyramidBlockHeight:m,compression:d,origin:S,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidResolutions:y,blockBoundary:v}),T=new ye.A({x:(A.xmax-A.xmin)/r,y:(A.ymax-A.ymin)/a,spatialReference:I}),_=x?{BandProperties:x.bandProperties,DataType:x.dataType}:{};let C=null;const M=De(e[0],"PHOTOMETRICINTERPRETATION"),O=Ne(e[0],"COLORMAP");if(M<=3&&(null===O||void 0===O?void 0:O.length)>3&&O.length%3==0){C=[];const e=O.length/3;for(let t=0;t<e;t++)C.push([t,O[t]>>>8,O[t+e]>>>8,O[t+2*e]>>>8])}const F=new q.A({width:r,height:a,bandCount:u,pixelType:c,pixelSize:T,storageInfo:R,spatialReference:I,isPseudoSpatialReference:b,keyProperties:_,extent:A,colormap:C,statistics:x?x.statistics:null});if(null!==g&&void 0!==g&&g.length&&(F.nativeExtent=new N.A({xmin:-.5,ymin:.5-a,xmax:r-.5,ymax:.5,spatialReference:I}),F.transform=new ae.A({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new ye.A({x:(A.xmax-A.xmin)/r,y:(A.ymax-A.ymin)/a,spatialReference:I}),R.origin.x=-.5,R.origin.y=.5),y){const{x:e,y:t}=F.pixelSize;y.forEach((i=>{i.x*=e,i.y*=t}))}return{imageInfo:n,rasterInfo:F}}(d),p=(0,Pe.zS)(d),m=(0,Pe.r9)(d);if(this._headerInfo=(0,s.A)({littleEndian:a,isBigTiff:c,ifds:d,pyramidIFDs:p,maskIFDs:m},f),this._set("rasterInfo",h),!f.isSupported)throw new o.A("tiffraster:open","this tiff is not supported: "+f.message);if(!f.tileWidth)throw new o.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");h.isPseudoSpatialReference&&l.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const y=null===(t=d[0].get("PREDICTOR"))||void 0===t||null===(t=t.values)||void 0===t?void 0:t[0];if(3===(null===(i=d[0].get("SAMPLEFORMAT"))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0])&&2===y)throw new o.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:v,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!v){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,$.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new ye.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,h)}g.includes("vat.dbf")||1!==h.bandCount||"u8"!==h.pixelType||v||(h.attributeTable=await this._fetchAuxiliaryTable(e),null!=h.attributeTable&&(h.keyProperties.DataType="thematic")),v&&this.updateImageSpaceRasterInfo(h),this.updateTileInfo()}async _readIFDs(e,t,i,s,n){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+n,to:s+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=s+n,s=0);const o=await this._readIFD(t,i,s,n,ke.A.tiffTags,r,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-n,n,r,a)}async _readIFD(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ke.A.tiffTags,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!e)return null;const o=(0,Pe.JM)(e,t,i,s,n,r);if(o.success){var l,u;const i=[];if(null!==(l=o.ifd)&&void 0!==l&&l.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)).filter(se.Ru),r=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-r<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:a});e=n,s=r,i.forEach((i=>(0,Pe.Cr)(e,t,i,s)))}}if(null!==(u=o.ifd)&&void 0!==u&&u.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=null===i||void 0===i?void 0:i.values;if(n&&n.length>4){const r=n[0]+"."+n[1]+"."+n[2],o=await this._readIFD(e,t,i.valueOffset+6-s,s,ke.A.geoKeys,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:s,to:s+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,s,ke.A.tiffTags,4,a)}}async _fetchRawTiffTile(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const r=this._getTileLocation(e,t,i,s);if(!r)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=r,c=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),d=await Promise.all(c),f=d.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===d.length?d[0].data:new ArrayBuffer(f),p=[0],m=[0];if(d.length>1){const e=new Uint8Array(h);for(let t=0,i=0;t<d.length;t++){const s=d[t].data;e.set(new Uint8Array(s),i),p[t]=i,i+=s.byteLength,m[t]=s.byteLength}}const{blockWidth:y,blockHeight:v}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:y,height:v,planes:null,pixelType:null});if(null==g)return null;let x,w,I;if(o!==y||l!==v){let e=g.mask;if(e)for(x=0;x<v;x++)if(I=x*y,x<l)for(w=o;w<y;w++)e[I+w]=0;else for(w=0;w<y;w++)e[I+w]=0;else for(e=new Uint8Array(y*v),g.mask=e,x=0;x<l;x++)for(I=x*y,w=0;w<o;w++)e[I+w]=1}return g}_getTileLocation(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=s?o.maskIFDs[a]:0===a?null===o||void 0===o?void 0:o.ifds[0]:null===o||void 0===o?void 0:o.pyramidIFDs[a-1];if(!l)return null;const u=(0,Pe.XO)(l,o),c=Ne(l,"TILEOFFSETS");if(void 0===c)return null;const d=Ne(l,"TILEBYTECOUNTS"),{minRow:f,minCol:h,maxRow:p,maxCol:m}=r[a];if(t>p||i>m||t<f||i<h)return null;const y=De(l,"IMAGEWIDTH"),v=De(l,"IMAGELENGTH"),g=De(l,"TILEWIDTH"),x=De(l,"TILELENGTH"),w=[];if(u){const{bandCount:e}=this.rasterInfo;for(let s=0;s<e;s++){const e=s*(p+1)*(m+1)+t*(m+1)+i;w[s]={from:c[e],to:c[e]+d[e]-1}}}else{const e=t*(m+1)+i;w.push({from:c[e],to:c[e]+d[e]-1})}for(let I=0;I<w.length;I++)if(null==w[I].from||!w[I].to||w[I].to<0)return null;return{ranges:w,ifd:l,actualTileWidth:i===m&&y%g||g,actualTileHeight:t===p&&v%x||x}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ce(t)}catch(t){return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=Fe.parse(t);return null!==i&&void 0!==i&&i.recordSet?ee.A.fromJSON(i.recordSet):null}catch(t){return null}}};(0,n._)([(0,f.MZ)()],Ee.prototype,"_files",void 0),(0,n._)([(0,f.MZ)()],Ee.prototype,"_headerInfo",void 0),(0,n._)([(0,f.MZ)()],Ee.prototype,"_bufferSize",void 0),(0,n._)([(0,f.MZ)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=(0,n._)([(0,m.$)("esri.layers.support.rasterDatasets.TIFFRaster")],Ee);const Be=Ee,Le=new Map;Le.set("MRF",{desc:"Meta Raster Format",constructor:Ce}),Le.set("TIFF",{desc:"GeoTIFF",constructor:Be}),Le.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ae}),Le.set("JPG",{desc:"JPG Raster Format",constructor:he}),Le.set("PNG",{desc:"PNG Raster Format",constructor:he}),Le.set("GIF",{desc:"GIF Raster Format",constructor:he}),Le.set("BMP",{desc:"BMP Raster Format",constructor:he}),Le.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ie}),Le.set("MEMORY",{desc:"In Memory Raster Format",constructor:Q});class Je{static get supportedFormats(){const e=new Set;return Le.forEach(((t,i)=>e.add(i))),e}static async open(e){var t,i;const{url:s,ioConfig:n,source:r,sourceJSON:a}=e;let l=null!==(t=e.datasetFormat)&&void 0!==t?t:null===n||void 0===n?void 0:n.datasetFormat;null==l&&(s.includes(".")?l=s.slice(s.lastIndexOf(".")+1).toUpperCase():"coverage"===(null===r||void 0===r||null===(i=r.type)||void 0===i?void 0:i.toLowerCase())?l="CovJSON":(null===r||void 0===r?void 0:r.extent)&&r.pixelblocks&&(l="MEMORY")),"OVR"===l||"TIF"===l?l="TIFF":"JPG"===l||"JPEG"===l||"JFIF"===l?l="JPG":"COVJSON"===l&&(l="CovJSON"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(l="RasterTileServer");const u={url:s,source:r,sourceJSON:a,datasetFormat:l,ioConfig:null!==n&&void 0!==n?n:{bandIds:null,sampling:null}};if(Object.keys(u).forEach((e=>{null==u[e]&&delete u[e]})),l){if(!this.supportedFormats.has(l))throw new o.A("rasterfactory:open","not a supported format "+l);if("CRF"===l)throw new o.A("rasterfactory:open","cannot open raster: ".concat(s));const t=new(0,Le.get(l).constructor)(u);return await t.open({signal:e.signal}),t}const c=Array.from(Le.keys()).filter((e=>"CovJSON"!==e&&"Memory"!==e));let d=0;const f=()=>{if(l=c[d++],!l)return null;if("CRF"===l)return null;const t=new(0,Le.get(l).constructor)(u);return t.open({signal:e.signal}).then((()=>t)).catch((()=>f()))};return f()}static register(e,t,i){Le.has(e.toUpperCase())||Le.set(e.toUpperCase(),{desc:t,constructor:i})}}var ze=i(81633),Ve=i(30973),je=i(61701);let Ue=class extends((0,g.dM)((0,R.j)((0,I.q)((0,b.A)((0,A.H)((0,x.d)((0,w.o)((0,T.e)((0,v.b)((0,S.J)((0,u.P)(a.A.ClonableMixin(y.A))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,c.sg)((async(e,t,s)=>{const{save:n,saveAs:r}=await i.e(964).then(i.bind(i,20964));switch(e){case je.X.SAVE:return n(this,t);case je.X.SAVE_AS:return r(this,s,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?(0,s.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.QP).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;const i=[(0,M.rZ)("Pixel Value"),(0,M.dy)("Raw Pixel Value")],s=null!==(e=null===(t=this.raster)||void 0===t?void 0:t.rasterInfo)&&void 0!==e?e:this.serviceRasterInfo,n=null===s||void 0===s?void 0:s.attributeTable;if(n){const e=(0,M.jC)(n);i.push(...e)}const r=null===s||void 0===s?void 0:s.dataType,a=null===s||void 0===s?void 0:s.multidimensionalInfo;if(("vector-magdir"===r||"vector-uv"===r)&&null!=a){var o;const e=null===(o=a.variables[0].unit)||void 0===o?void 0:o.trim(),t=(0,M.DV)(e),s=(0,M.y6)();i.push(t,s)}if(a){const e=(0,M.AL)(a);i.push(...e)}return i}createPopupTemplate(e){var t;const{rasterFields:i}=this,n=null!==(t=null===e||void 0===e?void 0:e.visibleFieldNames)&&void 0!==t?t:new Set(i.map((e=>{let{name:t}=e;return t})).filter((e=>e!==M.F_.rawServicePixelValue))),r=(0,Ve.tn)({fields:i,title:this.title},(0,s.A)((0,s.A)({},e),{},{visibleFieldNames:n})),{rasterInfo:a}=this.raster;return null!==r&&void 0!==r&&r.fieldInfos&&a&&(0,M.h4)(r.fieldInfos,a),r}async generateRasterInfo(e,t){var i;if(e=(0,h.PZ)(O.A,e),await this.load(),!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase()))return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(s){if(s instanceof o.A)throw s;throw new o.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(je.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(je.X.SAVE_AS,t,e)}write(e,t){var i;const s=null!==(i=this._primaryRasters[0])&&void 0!==i?i:this.raster;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new o.A("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){var t;let i=!1;if(this.raster)await this._openFromRaster(this.raster,e),i="Function"===this.raster.datasetFormat,!i&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:s}=this;if(!t&&!s)throw new o.A("imagery-tile-layer:open","missing url or source parameter");s?await this._openFromSource(s,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const n=this.raster.rasterInfo;if(!n)throw new o.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",i?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:(0,s.A)((0,s.A)({},this.sourceJSON),{},{minScale:0,maxScale:0});this.read(e,{origin:"service"})}else this.read({tileInfo:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,d.wB)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const n=[e];t&&(0,ze.UD)(t.toJSON(),n);const r=await Promise.all(n.map((e=>Je.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,s.A)((0,s.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:i})))),a=r.findIndex((e=>null==e));if(a>-1)throw new o.A("imagery-tile-layer:open","cannot open raster: ".concat(n[a]));return this._primaryRasters=r,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await Je.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,s.A)((0,s.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==i)throw new o.A("imagery-tile-layer:open","cannot open raster: ".concat(e));this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){var i;const n="the tiled imagery data source is not supported",r="coverage"===(null===(i=e.type)||void 0===i?void 0:i.toLowerCase())?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!r)throw new o.A("imagery-tile-layer:open",n);"MEMORY"===r&&(e=(0,s.A)((0,s.A)({},e),{},{pixelBlock:void 0,pixelBlocks:[e.pixelBlock]}));const a=await Je.open({url:"",source:e,datasetFormat:r,ioConfig:(0,s.A)((0,s.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==a)throw new o.A("imagery-tile-layer:open",n);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(e,t){var i,s;const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>n[e.url]=e));const r=(0,ze.vt)(null!==(i=null===(s=e.functionDefinition)||void 0===s?void 0:s.toJSON())&&void 0!==i?i:e.toJSON(),n),a=new F.A({rasterFunction:r});return await a.open(t),a}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(i){i instanceof o.A&&l.A.getLogger(this).error("imagery-tile-layer:open",i.message),l.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,n._)([(0,f.MZ)({clonable:!1})],Ue.prototype,"_primaryRasters",void 0),(0,n._)([(0,f.MZ)(_.fV)],Ue.prototype,"legendEnabled",void 0),(0,n._)([(0,f.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ue.prototype,"isReference",void 0),(0,n._)([(0,f.MZ)({type:["show","hide"]})],Ue.prototype,"listMode",void 0),(0,n._)([(0,f.MZ)({json:{read:!0,write:!0}})],Ue.prototype,"blendMode",void 0),(0,n._)([(0,f.MZ)({type:O.A,json:{name:"renderingRule",write:!0}})],Ue.prototype,"rasterFunction",void 0),(0,n._)([(0,f.MZ)()],Ue.prototype,"sourceJSON",void 0),(0,n._)([(0,f.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Ue.prototype,"version",void 0),(0,n._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],Ue.prototype,"type",void 0),(0,n._)([(0,f.MZ)({type:["ArcGISTiledImageServiceLayer"]})],Ue.prototype,"operationalLayerType",void 0),(0,n._)([(0,f.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Ue.prototype,"popupEnabled",void 0),(0,n._)([(0,f.MZ)({type:r.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Ue.prototype,"popupTemplate",void 0),(0,n._)([(0,f.MZ)({readOnly:!0})],Ue.prototype,"defaultPopupTemplate",null),(0,n._)([(0,f.MZ)({readOnly:!0,type:[C.A]})],Ue.prototype,"fields",void 0),(0,n._)([(0,f.MZ)({readOnly:!0,type:[C.A]})],Ue.prototype,"rasterFields",null),(0,n._)([(0,f.MZ)({constructOnly:!0})],Ue.prototype,"source",void 0),Ue=(0,n._)([(0,m.$)("esri.layers.ImageryTileLayer")],Ue);const He=Ue},75116:(e,t,i)=>{i.d(t,{A:()=>l});var s=i(35143),n=i(42553),r=i(46053),a=(i(81806),i(76460),i(47249),i(85842));let o=class extends n.A{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s._)([(0,r.MZ)()],o.prototype,"affectsPixelSize",null),(0,s._)([(0,r.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,s._)([(0,a.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o);const l=o}}]);
//# sourceMappingURL=9237.95fae4ae.chunk.js.map