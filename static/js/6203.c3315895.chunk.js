"use strict";(self.webpackChunkhousing_dashboard=self.webpackChunkhousing_dashboard||[]).push([[6203],{56203:(n,e,t)=>{t.r(e),t.d(e,{buffer:()=>C,changeDefaultSpatialReferenceTolerance:()=>Z,clearDefaultSpatialReferenceTolerance:()=>$,clip:()=>w,contains:()=>g,convexHull:()=>k,crosses:()=>m,cut:()=>h,densify:()=>F,difference:()=>L,disjoint:()=>O,distance:()=>v,equals:()=>A,extendedSpatialReferenceInfo:()=>y,flipHorizontal:()=>G,flipVertical:()=>_,generalize:()=>W,geodesicArea:()=>U,geodesicBuffer:()=>H,geodesicDensify:()=>K,geodesicLength:()=>X,intersect:()=>V,intersectLinesToPoints:()=>Y,intersects:()=>S,isSimple:()=>J,nearestCoordinate:()=>I,nearestVertex:()=>P,nearestVertices:()=>j,offset:()=>z,overlaps:()=>b,planarArea:()=>M,planarLength:()=>Q,relate:()=>D,rotate:()=>B,simplify:()=>N,symmetricDifference:()=>T,touches:()=>R,union:()=>E,within:()=>x});var r=t(89379),i=t(16783),a=t(19247),c=t(19902);function o(n){var e;return Array.isArray(n)?null===(e=n[0])||void 0===e?void 0:e.spatialReference:null===n||void 0===n?void 0:n.spatialReference}function u(n){return n?Array.isArray(n)?n.map(u):n.toJSON?n.toJSON():n:n}function s(n){return Array.isArray(n)?n.map((n=>(0,c.rS)(n))):(0,c.rS)(n)}let f;async function l(){return f||(f=(0,i.ho)("geometryEngineWorker",{strategy:"distributed"})),f}async function d(n,e){return(await l()).invoke("executeGEOperation",{operation:n,parameters:u(e)})}async function p(n,e){const t=await l();return Promise.all(t.broadcast("executeGEOperation",{operation:n,parameters:u(e)}))}function y(n){return d("extendedSpatialReferenceInfo",[n])}async function w(n,e){return s(await d("clip",[o(n),n,e]))}async function h(n,e){return s(await d("cut",[o(n),n,e]))}function g(n,e){return d("contains",[o(n),n,e])}function m(n,e){return d("crosses",[o(n),n,e])}function v(n,e,t){return d("distance",[o(n),n,e,t])}function A(n,e){return d("equals",[o(n),n,e])}function S(n,e){return d("intersects",[o(n),n,e])}function R(n,e){return d("touches",[o(n),n,e])}function x(n,e){return d("within",[o(n),n,e])}function O(n,e){return d("disjoint",[o(n),n,e])}function b(n,e){return d("overlaps",[o(n),n,e])}function D(n,e,t){return d("relate",[o(n),n,e,t])}function J(n){return d("isSimple",[o(n),n])}async function N(n){return s(await d("simplify",[o(n),n]))}async function k(n){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return s(await d("convexHull",[o(n),n,e]))}async function L(n,e){return s(await d("difference",[o(n),n,e]))}async function T(n,e){return s(await d("symmetricDifference",[o(n),n,e]))}async function V(n,e){return s(await d("intersect",[o(n),n,e]))}async function E(n){const e=function(n,e){let t;return Array.isArray(n)?t=n:(t=[],t.push(n),null!=e&&t.push(e)),t}(n,arguments.length>1&&void 0!==arguments[1]?arguments[1]:null);return s(await d("union",[o(e),e]))}async function z(n,e,t,r,i,a){return s(await d("offset",[o(n),n,e,t,r,i,a]))}async function C(n,e,t){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=[o(n),n,e,t,r];return s(await d("buffer",i))}async function H(n,e,t,r,i,a){const c=[o(n),n,e,t,r,i,a];return s(await d("geodesicBuffer",c))}async function I(n,e){let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const i=await d("nearestCoordinate",[o(n),n,e,t]);return(0,r.A)((0,r.A)({},i),{},{coordinate:a.A.fromJSON(i.coordinate)})}async function P(n,e){const t=await d("nearestVertex",[o(n),n,e]);return(0,r.A)((0,r.A)({},t),{},{coordinate:a.A.fromJSON(t.coordinate)})}async function j(n,e,t,i){return(await d("nearestVertices",[o(n),n,e,t,i])).map((n=>(0,r.A)((0,r.A)({},n),{},{coordinate:a.A.fromJSON(n.coordinate)})))}function q(n){var e;return"xmin"in n?n.center:"x"in n?n:null===(e=n.extent)||void 0===e?void 0:e.center}async function B(n,e,t){if(null==n)throw new nn;const r=n.spatialReference;if(null==(t=null!==t&&void 0!==t?t:q(n)))throw new nn;const i=n.constructor.fromJSON(await d("rotate",[r,n,e,t]));return i.spatialReference=r,i}async function G(n,e){if(null==n)throw new nn;const t=n.spatialReference;if(null==(e=null!==e&&void 0!==e?e:q(n)))throw new nn;const r=n.constructor.fromJSON(await d("flipHorizontal",[t,n,e]));return r.spatialReference=t,r}async function _(n,e){if(null==n)throw new nn;const t=n.spatialReference;if(null==(e=null!==e&&void 0!==e?e:q(n)))throw new nn;const r=n.constructor.fromJSON(await d("flipVertical",[t,n,e]));return r.spatialReference=t,r}async function W(n,e,t,r){return s(await d("generalize",[o(n),n,e,t,r]))}async function F(n,e,t){return s(await d("densify",[o(n),n,e,t]))}async function K(n,e,t){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return s(await d("geodesicDensify",[o(n),n,e,t,r]))}function M(n,e){return d("planarArea",[o(n),n,e])}function Q(n,e){return d("planarLength",[o(n),n,e])}function U(n,e,t){return d("geodesicArea",[o(n),n,e,t])}function X(n,e,t){return d("geodesicLength",[o(n),n,e,t])}async function Y(n,e){return s(await d("intersectLinesToPoints",[o(n),n,e]))}async function Z(n,e){await p("changeDefaultSpatialReferenceTolerance",[n,e])}async function $(n){await p("clearDefaultSpatialReferenceTolerance",[n])}class nn extends Error{constructor(){super("Illegal Argument Exception")}}}}]);
//# sourceMappingURL=6203.c3315895.chunk.js.map