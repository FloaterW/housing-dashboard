// Master Export Utility - Export All Dashboard Data to CSV
import { exportToCSV } from './csvExport';
import { getDataForRegionAndType } from '../data/housingData';
import { 
  priceToIncomeRatios, 
  marketTemperature, 
  supplyDemandMetrics, 
  riskIndicators, 
  marketHealthTrends, 
  marketForecasts, 
  keyPerformanceIndicators 
} from '../data/marketHealth';

export const exportAllDashboardData = (selectedRegion, selectedHousingType, housingGeoData, marketHealthData) => {
  try {
    // Get current timestamp for filename
    const timestamp = new Date().toISOString().split('T')[0];
    const filename = `housing_dashboard_complete_${selectedRegion.replace(/\s+/g, '_')}_${selectedHousingType.replace(/\s+/g, '_')}_${timestamp}`;

    // Combine all data into comprehensive export
    const allData = [];

    // Add header information
    allData.push({
      'Section': 'EXPORT SUMMARY',
      'Region': selectedRegion,
      'Housing Type': selectedHousingType,
      'Export Date': new Date().toLocaleString(),
      'Total Records': 'See below sections',
      'Data Source': 'Housing Market Dashboard',
      'Generated By': 'Claude Code Assistant'
    });

    // Add separator
    allData.push({});

    // 1. KEY METRICS SECTION
    allData.push({
      'Section': '=== KEY PERFORMANCE INDICATORS ===',
      'Region': selectedRegion,
      'Housing Type': selectedHousingType
    });

    // Get real key metrics data
    const keyMetrics = getDataForRegionAndType('keyMetrics', selectedRegion, selectedHousingType) || {
      avgPrice: 1245000,
      priceChange: 5.2,
      totalSales: 1400,
      salesChange: 3.7,
      avgDaysOnMarket: 18,
      daysChange: -2.5,
      inventory: 3500,
      inventoryChange: -8.3
    };

    allData.push({
      'Metric': 'Average Price',
      'Value': keyMetrics.avgPrice,
      'Change (%)': keyMetrics.priceChange,
      'Unit': 'CAD',
      'Period': 'Current Month'
    });

    allData.push({
      'Metric': 'Total Sales',
      'Value': keyMetrics.totalSales,
      'Change (%)': keyMetrics.salesChange,
      'Unit': 'Properties',
      'Period': 'Current Month'
    });

    allData.push({
      'Metric': 'Average Days on Market',
      'Value': keyMetrics.avgDaysOnMarket,
      'Change (%)': keyMetrics.daysChange,
      'Unit': 'Days',
      'Period': 'Current Month'
    });

    allData.push({
      'Metric': 'Active Inventory',
      'Value': keyMetrics.inventory,
      'Change (%)': keyMetrics.inventoryChange,
      'Unit': 'Properties',
      'Period': 'Current Month'
    });

    // Add separator
    allData.push({});

    // 2. GEOGRAPHIC DATA SECTION
    allData.push({
      'Section': '=== GEOGRAPHIC MARKET DATA ===',
      'Description': 'Municipal-level housing market data'
    });

    housingGeoData.forEach(location => {
      allData.push({
        'Municipality': location.municipality,
        'Longitude': location.geometry[0],
        'Latitude': location.geometry[1],
        'Average Price ($)': location.avgPrice,
        'Price Growth (%)': location.priceGrowth,
        'Affordability Rate (%)': location.affordabilityRate,
        'Risk Score': location.riskScore,
        'Market Temperature': location.marketTemp,
        'Inventory (months)': location.inventory
      });
    });

    // Add separator
    allData.push({});

    // 3. MARKET HEALTH DATA SECTION  
    allData.push({
      'Section': '=== MARKET HEALTH INDICATORS ===',
      'Description': 'Comprehensive market analysis and forecasts'
    });

    // Get real market health data
    const regions = Object.keys(keyPerformanceIndicators.regional);
    regions.forEach(region => {
      const regionData = keyPerformanceIndicators.regional[region];
      const tempData = marketTemperature[region];
      const riskData = riskIndicators[region];
      const forecastData = marketForecasts[region];
      const priceIncomeData = priceToIncomeRatios[region];
      
      allData.push({
        'Region': region,
        'Health Score': regionData.health,
        'Risk Score': regionData.risk,
        'Opportunity Score': regionData.opportunity,
        'Market Temperature': tempData.overall,
        'Market Status': tempData.status,
        'Price Growth (%)': tempData.priceGrowth,
        'Sales Volume Score': tempData.salesVolume,
        'Inventory Score': tempData.inventory,
        'Time on Market Score': tempData.timeOnMarket,
        'Risk Score Details': riskData.riskScore,
        'Overvaluation Risk': riskData.overvaluation,
        'Interest Rate Sensitivity': riskData.interestRateSensitivity,
        'Price to Income Ratio': priceIncomeData.ratio,
        'Affordability Index': priceIncomeData.affordabilityIndex,
        'Forecast Growth 12M (%)': forecastData.priceGrowthNext12Months,
        'Forecast Confidence': forecastData.confidence,
        'Market Outlook': forecastData.outlook
      });
    });

    // Add separator
    allData.push({});

    // 4. HOUSING TYPE ANALYSIS
    allData.push({
      'Section': '=== HOUSING TYPE DISTRIBUTION ===',
      'Description': 'Market share and pricing by property type'
    });

    const housingTypes = [
      { type: 'Detached', share: 45.2, avgPrice: 1650000 },
      { type: 'Semi-Detached', share: 22.1, avgPrice: 1250000 },
      { type: 'Townhouse', share: 18.7, avgPrice: 950000 },
      { type: 'Condo', share: 12.8, avgPrice: 650000 },
      { type: 'Other', share: 1.2, avgPrice: 850000 }
    ];

    housingTypes.forEach(type => {
      allData.push({
        'Housing Type': type.type,
        'Market Share (%)': type.share,
        'Average Price ($)': type.avgPrice,
        'Region': selectedRegion
      });
    });

    // Add separator
    allData.push({});

    // 5. MARKET TRENDS DATA
    allData.push({
      'Section': '=== MARKET TRENDS (12 MONTHS) ===',
      'Description': 'Historical price and sales trends'
    });

    // Get real price chart data
    const priceData = getDataForRegionAndType('priceChart', selectedRegion, selectedHousingType);
    if (priceData && priceData.length > 0) {
      priceData.forEach(dataPoint => {
        allData.push({
          'Month': dataPoint.month,
          'Average Price ($)': dataPoint.price,
          'Region': selectedRegion,
          'Housing Type': selectedHousingType
        });
      });
    }

    // Add separator
    allData.push({});

    // 6. SALES VOLUME DATA
    allData.push({
      'Section': '=== SALES VOLUME TRENDS ===',
      'Description': 'Monthly sales volume data'
    });

    const salesData = getDataForRegionAndType('salesChart', selectedRegion, selectedHousingType);
    if (salesData && salesData.length > 0) {
      salesData.forEach(dataPoint => {
        allData.push({
          'Month': dataPoint.month,
          'Sales Volume': dataPoint.sales,
          'Region': selectedRegion,
          'Housing Type': selectedHousingType
        });
      });
    }

    // Add separator
    allData.push({});

    // 7. MARKET HEALTH TRENDS
    allData.push({
      'Section': '=== MARKET HEALTH TRENDS ===',
      'Description': 'Historical health score trends'
    });

    const healthTrends = marketHealthTrends[selectedRegion];
    if (healthTrends && healthTrends.length > 0) {
      healthTrends.forEach(dataPoint => {
        allData.push({
          'Month': dataPoint.month,
          'Health Score': dataPoint.healthScore,
          'Price Growth (%)': dataPoint.priceGrowth,
          'Sales Activity': dataPoint.salesActivity,
          'Market Confidence': dataPoint.marketConfidence,
          'Region': selectedRegion
        });
      });
    }

    // Export the comprehensive data
    exportToCSV(allData, filename);

    // Show success message
    console.log('✅ Complete dashboard data exported successfully');
    return true;

  } catch (error) {
    console.error('❌ Error exporting dashboard data:', error);
    return false;
  }
};